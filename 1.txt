[
  '\n' +
    '\n' +
    '        <p>I have an activity that starts AsyncTask and shows progress dialog for the duration of operation. The activity is declared NOT be recreated by rotation or keyboard slide.</p>\n' +
    '\n' +
    '        <pre><code>    &lt;activity android:name=".MyActivity" \n' +
    '              android:label="@string/app_name"\n' +
    '              android:configChanges="keyboardHidden|orientation"\n' +
    '              &gt;\n' +
    '        &lt;intent-filter&gt;\n' +
    '        &lt;/intent-filter&gt;\n' +
    '    &lt;/activity&gt;\n' +
    '        </code></pre>\n' +
    '\n' +
    '        <p>Once task completed, I dissmiss dialog, but on some phones (framework: 1.5, 1.6) such error is thrown:</p>\n' +
    '\n' +
    '        <pre><code>java.lang.IllegalArgumentException: View not attached to window manager\n' +
    '    at android.view.WindowManagerImpl.findViewLocked(WindowManagerImpl.java:356)\n' +
    '    at android.view.WindowManagerImpl.removeView(WindowManagerImpl.java:201)\n' +
    '    at android.view.Window$LocalWindowManager.removeView(Window.java:400)\n' +
    '    at android.app.Dialog.dismissDialog(Dialog.java:268)\n' +
    '    at android.app.Dialog.access$000(Dialog.java:69)\n' +
    '    at android.app.Dialog$1.run(Dialog.java:103)\n' +
    '    at android.app.Dialog.dismiss(Dialog.java:252)\n' +
    '    at xxx.onPostExecute(xxx$1.java:xxx)\n' +
    '        </code></pre>\n' +
    '\n' +
    '        <p>My code is:</p>\n' +
    '\n' +
    '        <pre><code>final Dialog dialog = new AlertDialog.Builder(context)\n' +
    '    .setTitle("Processing...")\n' +
    '    .setCancelable(true)\n' +
    '    .create();\n' +
    '\n' +
    'final AsyncTask&lt;MyParams, Object, MyResult&gt; task = new AsyncTask&lt;MyParams, Object, MyResult&gt;() {\n' +
    '\n' +
    '    @Override\n' +
    '    protected MyResult doInBackground(MyParams... params) {\n' +
    '        // Long operation goes here\n' +
    '    }\n' +
    '\n' +
    '    @Override\n' +
    '    protected void onPostExecute(MyResult result) {\n' +
    '        dialog.dismiss();\n' +
    '        onCompletion(result);\n' +
    '    }\n' +
    '};\n' +
    '\n' +
    'task.execute(...);\n' +
    '\n' +
    'dialog.setOnCancelListener(new OnCancelListener() {\n' +
    '    @Override\n' +
    '    public void onCancel(DialogInterface arg0) {\n' +
    '        task.cancel(false);\n' +
    '    }\n' +
    '});\n' +
    '\n' +
    'dialog.show();\n' +
    '        </code></pre>\n' +
    '\n' +
    '        <p>From what I have read (<a href="http://bend-ing.blogspot.com/2008/11/properly-handle-progress-dialog-in.html" rel="noreferrer">http://bend-ing.blogspot.com/2008/11/properly-handle-progress-dialog-in.html</a>) and seen in Android sources, it looks like the only possible situation to get that exception is when activity was destroyed. But as I have mentioned, I forbid activity recreation for basic events.</p>\n' +
    '\n' +
    '        <p>So any suggestions are very appreciated.</p>\n' +
    '    ',
  '\n' +
    '        <p>I too get this error <strong>sometimes</strong> when I dismiss dialog and finish activity from onPostExecute method. I guess sometimes activity gets finished before dialog successfully dismisses.</p>\n' +
    '\n' +
    '        <p>Simple, yet effective solution that works for me</p>\n' +
    '\n' +
    '        <pre><code>@Override\n' +
    'protected void onPostExecute(MyResult result) {\n' +
    '    try {\n' +
    '        if ((this.mDialog != null) &amp;&amp; this.mDialog.isShowing()) {\n' +
    '            this.mDialog.dismiss();\n' +
    '        }\n' +
    '    } catch (final IllegalArgumentException e) {\n' +
    '        // Handle or log or ignore\n' +
    '    } catch (final Exception e) {\n' +
    '        // Handle or log or ignore\n' +
    '    } finally {\n' +
    '        this.mDialog = null;\n' +
    '    }  \n' +
    '}\n' +
    '        </code></pre>\n' +
    '    ',
  '\n' +
    '        <p>Here is my "bullet proof" solution, which is compilation of all good answers that I found on this topic (thanks to @Damjan and @Kachi). Here the exception is swallowed only if all other ways of detection did not succeeded. In my case I need to close the dialog automatically and this is the only way to protect the app from crash. \n' +
    '        I hope it will help you! \n' +
    '        Please, vote and leave comments if you have remarks or better solution. Thank you!</p>\n' +
    '\n' +
    '        <pre><code>public void dismissWithCheck(Dialog dialog) {\n' +
    '        if (dialog != null) {\n' +
    '            if (dialog.isShowing()) {\n' +
    '\n' +
    '                //get the Context object that was used to great the dialog\n' +
    '                Context context = ((ContextWrapper) dialog.getContext()).getBaseContext();\n' +
    '\n' +
    "                // if the Context used here was an activity AND it hasn't been finished or destroyed\n" +
    '                // then dismiss it\n' +
    '                if (context instanceof Activity) {\n' +
    '\n' +
    '                    // Api &gt;=17\n' +
    '                    if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.JELLY_BEAN_MR1) {\n' +
    '                        if (!((Activity) context).isFinishing() &amp;&amp; !((Activity) context).isDestroyed()) {\n' +
    '                            dismissWithTryCatch(dialog);\n' +
    '                        }\n' +
    '                    } else {\n' +
    '\n' +
    '                        // Api &lt; 17. Unfortunately cannot check for isDestroyed()\n' +
    '                        if (!((Activity) context).isFinishing()) {\n' +
    '                            dismissWithTryCatch(dialog);\n' +
    '                        }\n' +
    '                    }\n' +
    '                } else\n' +
    "                    // if the Context used wasn't an Activity, then dismiss it too\n" +
    '                    dismissWithTryCatch(dialog);\n' +
    '            }\n' +
    '            dialog = null;\n' +
    '        }\n' +
    '    }\n' +
    '\n' +
    '    public void dismissWithTryCatch(Dialog dialog) {\n' +
    '        try {\n' +
    '            dialog.dismiss();\n' +
    '        } catch (final IllegalArgumentException e) {\n' +
    '            // Do nothing.\n' +
    '        } catch (final Exception e) {\n' +
    '            // Do nothing.\n' +
    '        } finally {\n' +
    '            dialog = null;\n' +
    '        }\n' +
    '    }\n' +
    '        </code></pre>\n' +
    '    ',
  '\n' +
    '        <p>Here is the correct solution to solving this problem:</p>\n' +
    '\n' +
    '        <pre><code>public void hideProgress() {\n' +
    '    if(mProgressDialog != null) {\n' +
    '        if(mProgressDialog.isShowing()) { //check if dialog is showing.\n' +
    '\n' +
    '            //get the Context object that was used to great the dialog\n' +
    '            Context context = ((ContextWrapper)mProgressDialog.getContext()).getBaseContext();\n' +
    '\n' +
    "            //if the Context used here was an activity AND it hasn't been finished or destroyed\n" +
    '            //then dismiss it\n' +
    '            if(context instanceof Activity) { \n' +
    '                if(!((Activity)context).isFinishing() &amp;&amp; !((Activity)context).isDestroyed()) \n' +
    '                    mProgressDialog.dismiss();\n' +
    '            } else //if the Context used wasnt an Activity, then dismiss it too\n' +
    '                mProgressDialog.dismiss();\n' +
    '        }\n' +
    '        mProgressDialog = null;\n' +
    '    }\n' +
    '}\n' +
    '        </code></pre>\n' +
    '\n' +
    '        <p>Instead of blindly catching all exceptions, this solution addresses the root of the problem: trying to dimiss a dialog when the activity used to initialize the dialog has already been finished. Working on my Nexus 4 running KitKat, but should work for all versions of Android.</p>\n' +
    '    ',
  '\n' +
    '        <p>I may have a workaround.</p>\n' +
    '\n' +
    '        <p>Was having the same issue, where I am loading lots of items (via the file system) into a <code>ListView</code> via an <code>AsyncTask</code>.  Had the <code>onPreExecute()</code> firing up a <code>ProgressDialog</code>, and then both <code>onPostExecute()</code> and <code>onCancelled()</code> (called when the task is cancelled explicitly via <code>AsyncTask.cancel()</code>) closing it via <code>.cancel()</code>.  </p>\n' +
    '\n' +
    `        <p>Got the same "java.lang.IllegalArgumentException: View not attached to window manager" error when I was killing the dialog in the <code>onCancelled()</code> method of the <code>AsyncTask</code> (I'd seen this done in the excellent <a href="http://code.google.com/p/shelves/" rel="nofollow noreferrer">Shelves app</a>).  </p>\n` +
    '\n' +
    '        <p>The workaround was to create a public field in the <code>AsyncTask</code> that contains the <code>ProgressDialog</code>:</p>\n' +
    '\n' +
    '        <pre><code>public ProgressDialog mDialog;\n' +
    '        </code></pre>\n' +
    '\n' +
    '        <p>Then, in <code>onDestroy()</code> when I cancel my <code>AsyncTask</code>, I can also kill the associated dialog via:</p>\n' +
    '\n' +
    '        <pre><code>AsyncTask.mDialog.cancel();\n' +
    '        </code></pre>\n' +
    '\n' +
    '        <p>Calling <code>AsyncTask.cancel()</code> DOES trigger <code>onCancelled()</code> in the <code>AsyncTask</code>, but for some reason by the time that method is called, the View has already been destroyed and thus cancelling the dialog is failing.</p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>Is there an easy way to get a list of all tests in a Django project without running the tests themselves? I was hoping for something like <code>./manage.py test --list</code>.</p>\n' +
    '    ',
  '\n' +
    '<p>In my opinion, the more correct way is to use the actual tool for running tests. E.g. in case of <a href="https://nose.readthedocs.org/en/latest/" rel="noreferrer">nose</a>:</p>\n' +
    '\n' +
    '<pre><code>./manage.py test &lt;app&gt; --verbosity 2 --collect-only\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>FYI, <a href="http://pytest.org/latest/" rel="noreferrer">py.test</a> also has <code>--collectonly</code> option to print tests instead of executing.</p>\n' +
    '\n' +
    '<p>Also see:</p>\n' +
    '\n' +
    '<ul>\n' +
    '<li><a href="https://stackoverflow.com/questions/712020/list-all-tests-found-by-nosetest">List all Tests Found by Nosetest</a></li>\n' +
    '</ul>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    `<p>I got an issue related to the HTTP response header "Access-Control-Allow-Origin" when using basic authetication with Spring. When I authenticate manually, like the code bellow (I'm using REST):</p>\n` +
    '\n' +
    '<pre class="lang-java prettyprint-override"><code>@RequestMapping(value = "/login", method = RequestMethod.POST, consumes = "application/json")\n' +
    '@ResponseStatus(value = HttpStatus.OK)\n' +
    'public void login(@RequestBody String body, HttpServletResponse response)\n' +
    '        throws IOException {\n' +
    '    try {\n' +
    '        User user = gson.fromJson(body, User.class);\n' +
    '\n' +
    '        UsernamePasswordAuthenticationToken token = new UsernamePasswordAuthenticationToken(\n' +
    '                usuario.getUsername(), usuario.getPassword());\n' +
    '\n' +
    '        authenticationManager.authenticate(token);\n' +
    '    } catch (BadCredentialsException e) {\n' +
    '        response.sendError(HttpServletResponse.SC_UNAUTHORIZED);\n' +
    '    } catch (Exception e) {\n' +
    '        response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n' +
    '    }\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>everything works fine, I receive the following HTTP response:</p>\n' +
    '\n' +
    '<pre><code>HTTP/1.1 401 Unauthorized\n' +
    'Server: Apache-Coyote/1.1\n' +
    'Access-Control-Allow-Origin: null\n' +
    'Access-Control-Allow-Credentials: true\n' +
    'Content-Type: text/html;charset=utf-8\n' +
    'Content-Length: 951\n' +
    'Date: Fri, 17 May 2013 19:14:36 GMT\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>as you can see, "Access-Control-Allow-Origin" is present on the response.\n' +
    'Everything is fine here. I can catch a 401 error in my ajax call.</p>\n' +
    '\n' +
    '<p>But when the authentication is performed automatically, like the code bellow:</p>\n' +
    '\n' +
    '<pre class="lang-java prettyprint-override"><code>@RequestMapping(value = "/name", method = RequestMethod.POST, consumes = "application/json")\n' +
    `@PreAuthorize("hasRole('ROLE_CUSTOMER')")\n` +
    'public @ResponseBody String getName(HttpServletResponse response) throws IOException {\n' +
    '    String json = null;\n' +
    '\n' +
    '    try {\n' +
    '        User userSession = (User) SecurityContextHolder.getContext()\n' +
    '                .getAuthentication().getPrincipal();\n' +
    '\n' +
    '        Customer customer = customerDao.getNameByUsername(userSession.getUsername());\n' +
    '\n' +
    '        json = gson.toJson(customer);\n' +
    '\n' +
    '    } catch (Exception e) {\n' +
    '        response.sendError(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);\n' +
    '    }\n' +
    '\n' +
    '    return json;\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>the HTTP response is:</p>\n' +
    '\n' +
    '<pre><code>HTTP/1.1 401 Unauthorized\n' +
    'Server: Apache-Coyote/1.1\n' +
    'WWW-Authenticate: Basic realm="Spring Security Application"\n' +
    'Content-Type: text/html;charset=utf-8\n' +
    'Content-Length: 981\n' +
    'Date: Fri, 17 May 2013 19:41:08 GMT\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>There is no "Access-Control-Allow-Origin" in the response</p>\n' +
    '\n' +
    '<p>Google Chrome console show the following error:</p>\n' +
    '\n' +
    '<pre><code>Origin null is not allowed by Access-Control-Allow-Origin\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>My ajax call does not return a 401 Unauthorized error, even though the HTTP response return it (response above), I receive an unknow error.</p>\n' +
    '\n' +
    `<p>I figured out that for all browsers, I need a "Access-Control-Allow-Origin" in the HTTP response, otherwise they will generate some kind of silent error and my ajax call will fail (can't catch the 401 error). Actually, javascript will fail silently. XMLHttpRequest\n` +
    'does not accept an HTTP response without "Access-Control-Allow-Origin".</p>\n' +
    '\n' +
    '<p>How can I make Spring inject this "Access-Control-Allow-Origin" in HTTP responses for basic authentication?</p>\n' +
    '\n' +
    '<p>this is my Spring Security xml:</p>\n' +
    '\n' +
    '<pre class="lang-xml prettyprint-override"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n' +
    '&lt;beans xmlns="http://www.springframework.org/schema/beans"\n' +
    '    xmlns:security="http://www.springframework.org/schema/security"\n' +
    '    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n' +
    '    xsi:schemaLocation="\n' +
    '          http://www.springframework.org/schema/beans\n' +
    '          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd\n' +
    '          http://www.springframework.org/schema/security\n' +
    '          http://www.springframework.org/schema/security/spring-security-3.1.xsd"&gt;\n' +
    '\n' +
    '    &lt;security:http create-session="stateless" entry-point-ref="authenticationEntryPoint"&gt;\n' +
    '        &lt;security:intercept-url pattern="/customer/**" /&gt;\n' +
    '        &lt;security:http-basic /&gt;\n' +
    '        &lt;security:custom-filter ref="basicAuthenticationFilter"\n' +
    '            after="BASIC_AUTH_FILTER" /&gt;\n' +
    '    &lt;/security:http&gt;\n' +
    '\n' +
    '    &lt;bean id="basicAuthenticationFilter"\n' +
    '        class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"&gt;\n' +
    '        &lt;property name="authenticationManager" ref="authenticationManager" /&gt;\n' +
    '        &lt;property name="authenticationEntryPoint" ref="authenticationEntryPoint" /&gt;\n' +
    '    &lt;/bean&gt;\n' +
    '\n' +
    '    &lt;bean id="authenticationEntryPoint"\n' +
    '        class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint"&gt;\n' +
    '        &lt;property name="realmName" value="teste.com" /&gt;\n' +
    '    &lt;/bean&gt;\n' +
    '\n' +
    "    &lt;!-- It is responsible for validating the user's credentials --&gt;\n" +
    '    &lt;security:authentication-manager alias="authenticationManager"&gt;\n' +
    '\n' +
    '        &lt;!-- It is responsible for providing credential validation to the AuthenticationManager --&gt;\n' +
    '        &lt;security:authentication-provider&gt;\n' +
    '            &lt;security:password-encoder ref="passwordEncoder" /&gt;\n' +
    '\n' +
    '            &lt;security:jdbc-user-service\n' +
    '                data-source-ref="mySQLdataSource"\n' +
    '                users-by-username-query="select username, password, enabled from usuario where username = ?"\n' +
    '                authorities-by-username-query="select username, papel from autoridade where username = ?" /&gt;\n' +
    '\n' +
    '        &lt;/security:authentication-provider&gt;\n' +
    '\n' +
    '    &lt;/security:authentication-manager&gt;\n' +
    '\n' +
    '    &lt;bean class="org.springframework.security.crypto.password.StandardPasswordEncoder"\n' +
    '        id="passwordEncoder" /&gt;\n' +
    '\n' +
    '&lt;/beans&gt;\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>Just found my own way:</p>\n' +
    '\n' +
    "<p>First of all, I don't really remember why I put this line here, but it was messing up my code:</p>\n" +
    '\n' +
    '<pre><code>&lt;security:http-basic /&gt;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Second, this answer show me the path: <a href="https://stackoverflow.com/questions/4397062/handle-unauthorized-error-message-for-basic-authentication-in-spring-security">Handle unauthorized error message for Basic Authentication in Spring Security</a>. I had to create a custom authentication entry point in order to send the Access-Control-Allow-Origin thing.</p>\n' +
    '\n' +
    '<p>So this is my code now:</p>\n' +
    '\n' +
    '<pre class="lang-xml prettyprint-override"><code>&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n' +
    '&lt;beans xmlns="http://www.springframework.org/schema/beans"\n' +
    '    xmlns:security="http://www.springframework.org/schema/security"\n' +
    '    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n' +
    '    xsi:schemaLocation="\n' +
    '              http://www.springframework.org/schema/beans\n' +
    '              http://www.springframework.org/schema/beans/spring-beans-3.2.xsd\n' +
    '              http://www.springframework.org/schema/security\n' +
    '              http://www.springframework.org/schema/security/spring-security-3.1.xsd"&gt;\n' +
    '\n' +
    '    &lt;security:http create-session="stateless"\n' +
    '        entry-point-ref="authenticationEntryPoint"&gt;\n' +
    '        &lt;security:intercept-url pattern="/api/admin/**" /&gt;\n' +
    '        &lt;security:intercept-url pattern="/medico/**" /&gt;\n' +
    '        &lt;!-- &lt;security:http-basic /&gt;  --&gt;\n' +
    '        &lt;security:custom-filter ref="basicAuthenticationFilter"\n' +
    '            after="BASIC_AUTH_FILTER" /&gt;\n' +
    '    &lt;/security:http&gt;\n' +
    '\n' +
    '    &lt;bean id="basicAuthenticationFilter"\n' +
    '        class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter"&gt;\n' +
    '        &lt;property name="authenticationManager" ref="authenticationManager" /&gt;\n' +
    '        &lt;property name="authenticationEntryPoint" ref="authenticationEntryPoint" /&gt;\n' +
    '    &lt;/bean&gt;\n' +
    '\n' +
    '            &lt;!-- \n' +
    '    &lt;bean id="authenticationEntryPoint" \n' +
    '        class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint"&gt;\n' +
    '        &lt;property name="realmName" value="test.com" /&gt;\n' +
    '    &lt;/bean&gt; --&gt;\n' +
    '\n' +
    '\n' +
    '    &lt;bean id="authenticationEntryPoint" \n' +
    '        class="com.test.util.PlainTextBasicAuthenticationEntryPoint"&gt;\n' +
    '        &lt;property name="realmName" value="test.com" /&gt;\n' +
    '    &lt;/bean&gt; \n' +
    '\n' +
    "    &lt;!-- It is responsible for validating the user's credentials --&gt;\n" +
    '    &lt;security:authentication-manager alias="authenticationManager"&gt;\n' +
    '\n' +
    '        &lt;!-- It is responsible for providing credential validation to the AuthenticationManager --&gt;\n' +
    '        &lt;security:authentication-provider&gt;\n' +
    '            &lt;security:password-encoder ref="passwordEncoder" /&gt;\n' +
    '\n' +
    '            &lt;security:jdbc-user-service\n' +
    '                data-source-ref="mySQLdataSource"\n' +
    '                users-by-username-query="select username, password, enabled from usuario where username = ?"\n' +
    '                authorities-by-username-query="select username, papel from autoridade where username = ?" /&gt;\n' +
    '\n' +
    '        &lt;/security:authentication-provider&gt;\n' +
    '\n' +
    '    &lt;/security:authentication-manager&gt;\n' +
    '\n' +
    '    &lt;bean\n' +
    '        class="org.springframework.security.crypto.password.StandardPasswordEncoder"\n' +
    '        id="passwordEncoder" /&gt;\n' +
    '\n' +
    '&lt;/beans&gt;\n' +
    '</code></pre>\n' +
    '\n' +
    '<pre class="lang-java prettyprint-override"><code>package com.test.util;\n' +
    '\n' +
    'import java.io.IOException;\n' +
    'import java.io.PrintWriter;\n' +
    '\n' +
    'import javax.servlet.ServletException;\n' +
    'import javax.servlet.http.HttpServletRequest;\n' +
    'import javax.servlet.http.HttpServletResponse;\n' +
    '\n' +
    'import org.springframework.security.core.AuthenticationException;\n' +
    'import org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint;\n' +
    '\n' +
    'public class PlainTextBasicAuthenticationEntryPoint extends\n' +
    '        BasicAuthenticationEntryPoint {\n' +
    '\n' +
    '      @Override\n' +
    '        public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n' +
    '            response.addHeader("Access-Control-Allow-Origin", "null");\n' +
    '            response.addHeader("WWW-Authenticate", "Basic realm=\\"" + getRealmName() + "\\"");\n' +
    '            response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n' +
    '            PrintWriter writer = response.getWriter();\n' +
    '            writer.println("HTTP Status " + HttpServletResponse.SC_UNAUTHORIZED + " - " + authException.getMessage());\n' +
    '        }\n' +
    '\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>My http response now:</p>\n' +
    '\n' +
    '<pre><code>HTTP/1.1 401 Unauthorized\n' +
    'Server: Apache-Coyote/1.1\n' +
    'Access-Control-Allow-Origin: null\n' +
    'WWW-Authenticate: Basic realm="test.com"\n' +
    'Content-Length: 35\n' +
    'Date: Mon, 20 May 2013 20:05:03 GMT\n' +
    '\n' +
    'HTTP Status 401 - Bad credentials\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>before the alteration, I got this error message:</p>\n' +
    '\n' +
    '<pre><code>OPTIONS http://localhost:8080/test/customer/name 200 (OK) jquery-1.8.2.min.js:2\n' +
    'XMLHttpRequest cannot load http://localhost:8080/test/customer/name. Origin null is     not allowed by Access-Control-Allow-Origin. \n' +
    '</code></pre>\n' +
    '\n' +
    '<p>and now as expected I get this one:</p>\n' +
    '\n' +
    '<pre><code>OPTIONS http://localhost:8080/test/customer/name 200 (OK) jquery-1.8.2.min.js:2\n' +
    'POST http://localhost:8080/test/customer/name 401 (Unauthorized) \n' +
    '</code></pre>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>When I write the following code, the annotator tells me that <code>BrowserSelector</code> is not defined in the second typedef:</p>\n' +
    '\n' +
    '<pre><code>/**\n' +
    ' * @typedef {{name: String, minVer: Number, maxVer: Number}} BrowserSelector\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {{type:String, browser: BrowserSelector, attribute: Object}} Selector\n' +
    ' */\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>I believe it is not associating the type with the name. How can I do that? </p>\n' +
    '\n' +
    '<p>I would prefer not to add actual code for it, just jsdoc comments.</p>\n' +
    '    ',
  '\n' +
    "<p>I'm using this comment style for 'struct' like types:</p>\n" +
    '\n' +
    '<pre><code>/**\n' +
    ' * @name BrowserSelector\n' +
    ' * @property {String} name\n' +
    ' * @property {Number} minVer\n' +
    ' * @property {Number} maxVer\n' +
    ' */\n' +
    '\n' +
    '/** @type {BrowserSelector|*} */\n' +
    "var mySelector = {}; // no warning because of '*' in @type :S\n" +
    "mySelector.name = 'foo'; // no warning :)\n" +
    "mySelector.id = 'bar'; // warning :)\n" +
    '</code></pre>\n' +
    '\n' +
    '<p></p>\n' +
    '    ',
  '\n' +
    '<p>Multiple comments to describe properties is not necessary as of Webstorm 7 (perhaps earlier).</p>\n' +
    '\n' +
    '<pre><code>/**\n' +
    ' * @name BrowserSelector\n' +
    ' * @type {{\n' +
    ' *     name: String,\n' +
    ' *     minVer: Number,\n' +
    ' *     maxVer: Number\n' +
    ' * }}\n' +
    ' */\n' +
    '</code></pre>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>I am trying to sort an array of Strings using <code>compareTo()</code>. This is my code:</p>\n' +
    '\n' +
    '<pre><code>static String Array[] = {" Hello ", " This ", "is ", "Sorting ", "Example"};\n' +
    'String temp;\n' +
    '\n' +
    'public static void main(String[] args)\n' +
    '{\n' +
    '\n' +
    '   for (int j=0; j&lt;Array.length;j++)\n' +
    '   {\n' +
    '       for (int i=j+1 ; i&lt;Array.length; i++)\n' +
    '       {\n' +
    '           if (Array[i].compareTo(Array[j])&lt;0)\n' +
    '           {\n' +
    '               String temp = Array[j];\n' +
    '               Array[j] = Array[i];\n' +
    '               Array[i] = temp;\n' +
    '           }\n' +
    '       }\n' +
    '       System.out.print(Array[j]);\n' +
    '   }\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Now the output is:</p>\n' +
    '\n' +
    '<pre class="lang-none prettyprint-override"><code>Hello  This Example Sorting is\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>I am getting results, but not the results I want to get, which are:</p>\n' +
    '\n' +
    '<pre class="lang-none prettyprint-override"><code>Hello This Example Is Sorting\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>How can I adjust my code to sort the string array properly?</p>\n' +
    '    ',
  '\n' +
    '<p>Your output is correct. Denote the white characters of  " Hello" and " This" at the beginning.</p>\n' +
    '\n' +
    '<p>Another issue is with your methodology. Use the <code>Arrays.sort()</code> method:</p>\n' +
    '\n' +
    '<pre><code>String[] strings = { " Hello ", " This ", "Is ", "Sorting ", "Example" };\n' +
    'Arrays.sort(strings);\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Output:</strong></p>\n' +
    '\n' +
    '<pre><code> Hello\n' +
    ' This\n' +
    'Example\n' +
    'Is\n' +
    'Sorting\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Here the third element of the array "is" should be "Is", otherwise it will come in last after sorting. Because the sort method internally uses the ASCII value to sort elements.</p>\n' +
    '    ',
  '\n' +
    '<p>Apart from the alternative solutions that were posted here (which are correct), no one has actually answered your question by addressing what was wrong with your code.</p>\n' +
    '\n' +
    '<p>It seems as though you were trying to implement a <a href="http://www.algolist.net/Algorithms/Sorting/Selection_sort">selection sort</a> algorithm. I will not go into the details of how sorting works here, but I have included a few links for your reference =) </p>\n' +
    '\n' +
    '<p>Your code was syntactically correct, but logically wrong. You were partially sorting your strings <em>by only comparing each string with the strings that came after it</em>. Here is a corrected version (I retained as much of your original code to illustrate what was "wrong" with it):</p>\n' +
    '\n' +
    '<pre><code>static  String Array[]={" Hello " , " This " , "is ", "Sorting ", "Example"};\n' +
    'String  temp;\n' +
    '\n' +
    "//Keeps track of the smallest string's index\n" +
    'int  shortestStringIndex; \n' +
    '\n' +
    'public static void main(String[] args)  \n' +
    '{              \n' +
    '\n' +
    ' //I reduced the upper bound from Array.length to (Array.length - 1)\n' +
    ' for(int j=0; j &lt; Array.length - 1;j++)\n' +
    ' {\n' +
    '     shortestStringIndex = j;\n' +
    '\n' +
    '     for (int i=j+1 ; i&lt;Array.length; i++)\n' +
    '     {\n' +
    '         //We keep track of the index to the smallest string\n' +
    '         if(Array[i].trim().compareTo(Array[shortestStringIndex].trim())&lt;0)\n' +
    '         {\n' +
    '             shortestStringIndex = i;  \n' +
    '         }\n' +
    '     }\n' +
    '     //We only swap with the smallest string\n' +
    '     if(shortestStringIndex != j)\n' +
    '     {\n' +
    '         String temp = Array[j];\n' +
    '         Array[j] = Array[shortestStringIndex]; \n' +
    '         Array[shortestStringIndex] = temp;\n' +
    '     }\n' +
    ' }\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Further Reading</strong></p>\n' +
    '\n' +
    '<p>The problem with this approach is that its <a href="http://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/">asymptotic complexity is <strong>O(n^2)</strong></a>. In simplified words, it gets very slow as the size of the array grows (approaches infinity). You may want to read about <a href="http://www.algolist.net/Algorithms/">better ways to sort data</a>, such as <a href="http://www.algolist.net/Algorithms/Sorting/Quicksort">quicksort</a>.</p>\n' +
    '    ',
  '\n' +
    '<p>I know this is a late reply but maybe it can help someone.</p>\n' +
    '\n' +
    '<p>Removing whitespace can be done by using the trim() function.\n' +
    'After that if you want to sort the array with case sensitive manner you can just use:</p>\n' +
    '\n' +
    '<pre><code>Arrays.sort(yourArray);\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>and for case insensitive manner:</p>\n' +
    '\n' +
    '<pre><code>Arrays.sort(yourArray,String.CASE_INSENSITIVE_ORDER);\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Hope this helps!</p>\n' +
    '    '
]
[
  '\n' +
    '\n' +
    '    <p>I want to mark up a phone number as callable link in an HTML document. I have read <a href="http://microformats.org/wiki/hcard-faq#How_do_you_mark_up_a_phone_extension" rel="nofollow noreferrer">the microformats approach</a>, and I know, that the <code>tel:</code> scheme would be standard, but is quite literally nowhere implemented.</p>\n' +
    '    <p>Skype defines, as far as I know, <code>skype:</code> and <code>callto:</code>, the latter having gained some popularity. I assume, that other companies have either other schemes or jump on the <code>callto:</code> train.</p>\n' +
    '    <p>What would be a best practice to mark-up a phone number, so that as many people as possible with VoIP software can just click on a link to get a call?</p>\n' +
    '    <p>Bonus question: Does anyone know about complications with emergency numbers such as 911 in US or 110 in Germany?</p>\n' +
    '    <p><strong>Update:</strong> Microsoft NetMeeting takes <code>callto:</code> schemes under WinXP. <a href="https://stackoverflow.com/questions/1009181/url-scheme-for-phone-call">This question</a> suggests, that Microsoft Office Communicator will handle <code>tel:</code> schemes but not <code>callto:</code> ones. Great, Redmond!</p>\n' +
    "    <p><strong>Update 2:</strong> Two and a half years later now. It seems to boil down to what you want to do with the number. In mobile context, <code>tel:</code> is the way to go. Targeting desktops it's up to you, if you think your users are more Skype people (<code>callto:</code>) or will more likely have something like Google Voice (<code>tel:</code>) installed. My personal opinion is, when in doubt use <code>tel:</code> (in line with @Sidnicious' answer).</p>\n" +
    "    <p><strong>Update 3:</strong> User @rybo111 noted, that Skype in Chrome has meanwhile jumped on the <code>tel:</code> bandwagon. I cannot verify this, because no machine with both at hand, but if it's true, it means we have finally a winner here: <code>tel:</code></p>\n",
  '\n' +
    '    <p>The <code>tel:</code> scheme was <a href="http://www.mail-archive.com/www-talk@w3.org/msg01660.html" rel="noreferrer">used in the late 1990s</a> and documented in early 2000 with <a href="https://www.rfc-editor.org/rfc/rfc2806" rel="noreferrer">RFC 2806</a> (which was obsoleted by the more-thorough <a href="https://www.rfc-editor.org/rfc/rfc3966" rel="noreferrer">RFC 3966</a> in 2004) and <a href="https://www.rfc-editor.org/rfc/rfc5341" rel="noreferrer">continues to be improved</a>. Supporting <code>tel:</code> on the iPhone was not an arbitrary decision.</p>\n' +
    '    <p><code>callto:</code>, while supported by Skype, <strong>is not a standard</strong> and should be avoided unless specifically targeting Skype users.</p>\n' +
    "    <p>Me? I'd just start including properly-formed <code>tel:</code> URIs on your pages (without sniffing the user agent) and wait for the rest of the world's phones to catch up :) .</p>\n" +
    '    <p><strong>Example</strong>:</p>\n' +
    '    <p></p><div class="snippet" data-lang="js" data-hide="false" data-console="true" data-babel="false">\n' +
    '        <div class="snippet-code">\n' +
    '            <pre class="snippet-code-html lang-html prettyprint-override"><code>&lt;a href="tel:+18475555555"&gt;1-847-555-5555&lt;/a&gt;</code></pre>\n' +
    '        </div>\n' +
    '    </div>\n' +
    '    <p></p>\n',
  '\n' +
    '    <p>My test results:</p>\n' +
    '\n' +
    '    <p><strong>callto:</strong></p>\n' +
    '\n' +
    '    <ul>\n' +
    '        <li>Nokia Browser: nothing happens</li>\n' +
    '        <li>Google Chrome: asks to run skype to call the number</li>\n' +
    '        <li>Firefox: asks to choose a program to call the number</li>\n' +
    '        <li>IE: asks to run skype to call the number</li>\n' +
    '    </ul>\n' +
    '\n' +
    '    <p><strong>tel:</strong></p>\n' +
    '\n' +
    '    <ul>\n' +
    '        <li>Nokia Browser: working</li>\n' +
    '        <li>Google Chrome: nothing happens</li>\n' +
    '        <li>Firefox: "Firefox doesnt know how to open this url"</li>\n' +
    '        <li>IE: could not find url</li>\n' +
    '    </ul>\n',
  '\n' +
    '    <p>The best bet is to start off with tel: which works on all mobiles</p>\n' +
    '\n' +
    '    <p>Then put in this code, which will only run when on a desktop, and only when a link is clicked.</p>\n' +
    '\n' +
    `    <p>I'm using <a href="http://detectmobilebrowsers.com/">http://detectmobilebrowsers.com/</a> to detect mobile browsers, you can use whatever method you prefer</p>\n` +
    '\n' +
    '    <pre><code>if (!jQuery.browser.mobile) {\n' +
    `    jQuery('body').on('click', 'a[href^="tel:"]', function() {\n` +
    "            jQuery(this).attr('href', \n" +
    "                jQuery(this).attr('href').replace(/^tel:/, 'callto:'));\n" +
    '    });\n' +
    '}\n' +
    '    </code></pre>\n' +
    '\n' +
    '    <p>So basically you cover all your bases.</p>\n' +
    '\n' +
    '    <p>tel: works on all phones to open the dialer with the number</p>\n' +
    '\n' +
    '    <p>callto: works on your computer to connect to skype from firefox, chrome</p>\n',
  '\n' +
    "    <p>As one would expect, WebKit's support of <code>tel:</code> extends to the Android mobile browser as well - FYI</p>\n",
  '\n' +
    `    <p><em>I keep this answer for "historic" purpose but don't recommend it anymore. See @Sidnicious' answer above and my Update 2.</em></p>\n` +
    '\n' +
    '    <p>Since it looks like a draw between callto and tel guys, I want to throw in a possible solution in the hope, that your comments will bring me back on the way of light ;-)</p>\n' +
    '\n' +
    '    <p>Using <code>callto:</code>, since most desktop clients will handle it:</p>\n' +
    '\n' +
    '    <pre><code>&lt;a href="callto:0123456789"&gt;call me&lt;/a&gt;\n' +
    '    </code></pre>\n' +
    '\n' +
    '    <p>Then, if the client is an iPhone, replace the links:</p>\n' +
    '\n' +
    '    <pre><code>window.onload = function () {\n' +
    '  if (navigator.userAgent.match (/iPhone/i)) {\n' +
    '    var a = document.getElementsByTagName ("a");\n' +
    '    for (var i = 0; i &lt; a.length; i++) {\n' +
    "      if (a[i].getAttribute ('href').search (/callto:/i) === 0) {\n" +
    `        a[i].setAttribute ('href', a[i].getAttribute ('href').replace (/^callto:/, "tel:"));\n` +
    '      }\n' +
    '    }\n' +
    '  }\n' +
    '};\n' +
    '    </code></pre>\n' +
    '\n' +
    '    <p>Any objections against this solution? Should I preferably start from <code>tel:</code>?</p>\n'
]
[
  '\n' +
    '                \n' +
    "<p>I'm trying to use Excel VBA to write to a text file.  I'm doing a few of these:</p>\n" +
    '\n' +
    '<pre><code>MyFile1 = "C:\\outputFromExcel1.txt"\n' +
    'fnum1 = FreeFile()\n' +
    'Open MyFile1 For Output As fnum1\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>and then writing to them like this:</p>\n' +
    '\n' +
    '<pre><code>Print #fnum1, text\n' +
    '</code></pre>\n' +
    '\n' +
    "<p>All variables in the above are declared just with <code>Dim</code>.  I'm writing hundreds of lines to the files and, very rarely, lines are being truncated -- i.e. the ends are being chopped off.  Is there a better way to write to a file in Excel VBA?</p>\n" +
    '\n' +
    "<p><strong>EDIT:</strong> I've just realized that it's always the last lines to be written that are truncated.  So I guess I need to close or flush the files somehow?</p>\n" +
    '    ',
  '\n' +
    '<p>You can use <code>Close #fnum1</code> to close the file handle and it should flush the remaining buffer contents.</p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>I am trying to make a simple library database. I list the search results in a gridview, then i have a textbox and a button, user enters the isbn and clicks loan button. Then, if there is enough number of items (itemNumber&gt;0) it is loaned by user. Here is the screenshot of user interface:</p>\n' +
    '\n' +
    '<p><img src="https://i.stack.imgur.com/SMmeD.jpg" alt="enter image description here"></p>\n' +
    '\n' +
    '<p>My question is, when user clicks loan button the loan may or may not be succesful. In both cases, i print a message indicating whether loan is succesful or not, and i also want the updated gridview to be displayed. The problem is, after pressing the loan button the gridview disappears and i just see the textbox, button and the message on the screen. How can i show the updated version of gridview after pressing loan button?</p>\n' +
    '\n' +
    '<p>Here is the code file:</p>\n' +
    '\n' +
    '<pre><code>&lt;%@ Page Language="C#" AutoEventWireup="true" CodeFile="SearchResults.aspx.cs" Inherits="Pages_SearchResults" %&gt;\n' +
    '\n' +
    '&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;\n' +
    '\n' +
    '&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;\n' +
    '&lt;head runat="server"&gt;\n' +
    '&lt;title&gt;&lt;/title&gt;\n' +
    '&lt;/head&gt;\n' +
    '&lt;body&gt;\n' +
    '&lt;form id="form1" runat="server"&gt;\n' +
    '&lt;div&gt;\n' +
    '\n' +
    '&lt;/div&gt;\n' +
    '&lt;asp:GridView ID="GridView1" runat="server" AutoGenerateColumns="False" \n' +
    '    DataKeyNames="ISBN" DataSourceID="SqlDataSource1" \n' +
    '    onselectedindexchanged="GridView1_SelectedIndexChanged" \n' +
    '    onrowcommand="GridView1_RowCommand"&gt;\n' +
    '    &lt;Columns&gt;\n' +
    '        &lt;asp:BoundField DataField="Title" HeaderText="Title" SortExpression="Title" /&gt;\n' +
    '        &lt;asp:BoundField DataField="ISBN" HeaderText="ISBN" ReadOnly="True" \n' +
    '            SortExpression="ISBN" /&gt;\n' +
    '        &lt;asp:BoundField DataField="AuthorName" HeaderText="AuthorName" \n' +
    '            SortExpression="AuthorName" /&gt;\n' +
    '        &lt;asp:BoundField DataField="AuthorlName" HeaderText="AuthorlName" \n' +
    '            SortExpression="AuthorlName" /&gt;\n' +
    '        &lt;asp:BoundField DataField="ItemType" HeaderText="ItemType" \n' +
    '            SortExpression="ItemType" /&gt;\n' +
    '        &lt;asp:BoundField DataField="PublishYear" HeaderText="PublishYear" \n' +
    '            SortExpression="PublishYear" /&gt;\n' +
    '\n' +
    '\n' +
    '\n' +
    '        &lt;asp:BoundField DataField="numOfCopies" HeaderText="Number of Copies" \n' +
    '            SortExpression="numOfCopies" /&gt;\n' +
    '\n' +
    '\n' +
    '\n' +
    '    &lt;/Columns&gt;\n' +
    '&lt;/asp:GridView&gt;\n' +
    '&lt;asp:SqlDataSource ID="SqlDataSource1" runat="server" \n' +
    '    ConnectionString="&lt;%$ ConnectionStrings:ConnectionString %&gt;" \n' +
    `    SelectCommand="SELECT * FROM [Items] WHERE ([Title] LIKE '%' + @Title + '%')"&gt;\n` +
    '    &lt;SelectParameters&gt;\n' +
    '        &lt;asp:FormParameter FormField="tSearchBox" Name="Title" Type="String" /&gt;\n' +
    '    &lt;/SelectParameters&gt;\n' +
    '&lt;/asp:SqlDataSource&gt;\n' +
    '&lt;br /&gt;\n' +
    '&lt;asp:Label ID="Label1" runat="server" Text="Type ISBN to loan:"&gt;&lt;/asp:Label&gt;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>&nbsp;&nbsp;\n' +
    '    \n' +
    '&nbsp;&nbsp;&nbsp;\n' +
    '    \n' +
    '    <br>\n' +
    '    <br>\n' +
    '    \n' +
    '    \n' +
    '    \n' +
    '    </p>\n' +
    '\n' +
    '<p>And here is the .cs file:</p>\n' +
    '\n' +
    '<pre><code>using System;\n' +
    'using System.Collections.Generic;\n' +
    'using System.Linq;\n' +
    'using System.Web;\n' +
    'using System.Web.UI;\n' +
    'using System.Web.UI.WebControls;\n' +
    'using System.Data.SqlClient;\n' +
    '\n' +
    'public partial class Pages_SearchResults : System.Web.UI.Page\n' +
    '{\n' +
    'protected void Page_Load(object sender, EventArgs e)\n' +
    '{\n' +
    '\n' +
    '}\n' +
    'protected void GridView1_SelectedIndexChanged(object sender, EventArgs e)\n' +
    '{\n' +
    '    Response.Redirect("Default.aspx");\n' +
    '}\n' +
    '\n' +
    '\n' +
    'protected void GridView1_RowCommand(object sender, GridViewCommandEventArgs e)\n' +
    '{\n' +
    '    SqlConnection con = new SqlConnection();\n' +
    '    con.ConnectionString = "Data Source=.\\\\SQLEXPRESS;AttachDbFilename=D:\\\\Users\\\\SUUSER\\\\Documents\\\\Visual Studio 2010\\\\Projects\\\\Library\\\\LibWebSite\\\\App_Data\\\\LibDatabase.mdf;Integrated Security=True;User Instance=True";\n' +
    '\n' +
    '    Int32 verify;\n' +
    '\n' +
    '    string title = GridView1.HeaderRow.Cells[0].Text, isbn = GridView1.HeaderRow.Cells[1].Text, name = GridView1.HeaderRow.Cells[2].Text, lname = GridView1.HeaderRow.Cells[3].Text, type = GridView1.HeaderRow.Cells[4].Text, year = GridView1.HeaderRow.Cells[5].Text;\n' +
    '\n' +
    '\n' +
    '}\n' +
    'protected void bLoanButton_Click(object sender, EventArgs e)\n' +
    '{\n' +
    '    SqlConnection con = new SqlConnection();\n' +
    '    con.ConnectionString = "Data Source=.\\\\SQLEXPRESS;AttachDbFilename=D:\\\\Users\\\\SUUSER\\\\Documents\\\\Visual Studio 2010\\\\Projects\\\\Library\\\\LibWebSite\\\\App_Data\\\\LibDatabase.mdf;Integrated Security=True;User Instance=True";\n' +
    '\n' +
    '    string user = "select CurrentID from CurrentUser";\n' +
    '\n' +
    '    SqlCommand cmd1 = new SqlCommand(user, con);\n' +
    '    con.Open();\n' +
    '    string get = cmd1.ExecuteScalar().ToString();\n' +
    '\n' +
    '    string query1 = "insert into LoanTable(StudId,ISBN,onBorrow) values ("\n' +
    `        + "'" + get + "'" + "," + "'" + tLoanBox.Text + "'" + ","\n` +
    `        + "'" + "1" + "'" + ")";\n` +
    '\n' +
    `    string numQuery = "select numOfCopies from Items where ISBN='" + tLoanBox.Text + "'";\n` +
    '\n' +
    '    SqlCommand cmdnumQuery = new SqlCommand(numQuery, con);\n' +
    '\n' +
    '    SqlCommand cmd2 = new SqlCommand(query1, con);\n' +
    '\n' +
    '    int result;\n' +
    '\n' +
    '    int num=Convert.ToInt32(cmdnumQuery.ExecuteScalar());\n' +
    '\n' +
    '\n' +
    '    result = cmd2.ExecuteNonQuery();\n' +
    '\n' +
    '    if (num &gt; 0)\n' +
    '    {\n' +
    '\n' +
    '        if (result &gt; 0)\n' +
    '            Response.Redirect("LoanSuccesfull.aspx");\n' +
    '    }\n' +
    '    else\n' +
    '        notAvailable.Visible = true;\n' +
    '\n' +
    '    con.Close();\n' +
    '\n' +
    '\n' +
    '}\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>And here is the code for loan button:</p>\n' +
    '\n' +
    '<pre><code> protected void bLoanButton_Click(object sender, EventArgs e)\n' +
    '{\n' +
    '    SqlConnection con = new SqlConnection();\n' +
    '    con.ConnectionString = "Data Source=.\\\\SQLEXPRESS;AttachDbFilename=D:\\\\Users\\\\SUUSER\\\\Documents\\\\Visual Studio 2010\\\\Projects\\\\Library\\\\LibWebSite\\\\App_Data\\\\LibDatabase.mdf;Integrated Security=True;User Instance=True";\n' +
    '\n' +
    '    string user = "select CurrentID from CurrentUser";\n' +
    '\n' +
    '    SqlCommand cmd1 = new SqlCommand(user, con);\n' +
    '    con.Open();\n' +
    '    string get = cmd1.ExecuteScalar().ToString();\n' +
    '\n' +
    '    string query1 = "insert into LoanTable(StudId,ISBN,onBorrow) values ("\n' +
    `        + "'" + get + "'" + "," + "'" + tLoanBox.Text + "'" + ","\n` +
    `        + "'" + "1" + "'" + ")";\n` +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '    SqlCommand cmd2 = new SqlCommand(query1, con);\n' +
    '\n' +
    '    int result;\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '    result = cmd2.ExecuteNonQuery();\n' +
    '\n' +
    '\n' +
    '\n' +
    '        if (result &gt; 0)\n' +
    '        {\n' +
    '            loanSuccesful.Visible = true;\n' +
    '            Response.Redirect("LoanSuccesfull.aspx");\n' +
    '\n' +
    '        }\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '\n' +
    '    con.Close();\n' +
    '\n' +
    '\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>I appreciate any help. Thanks</p>\n' +
    '    ',
  '\n' +
    '<p>All you have to do is In your bLoanButton_Click , add a line to rebind the Grid to the SqlDataSource :</p>\n' +
    '\n' +
    '<pre><code>protected void bLoanButton_Click(object sender, EventArgs e)\n' +
    '{\n' +
    '\n' +
    '//your same code\n' +
    '........\n' +
    '\n' +
    'GridView1.DataBind();\n' +
    '\n' +
    '\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>regards</p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>After reading <a href="http://groups.google.com/group/comp.lang.c++.moderated/msg/33f173780d58dd20" rel="noreferrer">Hidden Features and Dark Corners of C++/STL</a> on <code>comp.lang.c++.moderated</code>, I was completely surprised that the following snippet compiled and worked in both Visual Studio 2008 and G++ 4.4.</p>\n' +
    "<p>Here's the code:</p>\n" +
    '<pre><code>#include &lt;stdio.h&gt;\n' +
    'int main()\n' +
    '{\n' +
    '    int x = 10;\n' +
    '    while (x --&gt; 0) // x goes to 0\n' +
    '    {\n' +
    '        printf("%d ", x);\n' +
    '    }\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p>Output:</p>\n' +
    '<pre><code>9 8 7 6 5 4 3 2 1 0\n' +
    '</code></pre>\n' +
    "<p>I'd assume this is C, since it works in GCC as well. Where is this defined in the standard, and where has it come from?</p>\n" +
    '    ',
  '\n' +
    '<p><code>--&gt;</code> is not an operator. It is in fact two separate operators, <code>--</code> and <code>&gt;</code>.</p>\n' +
    "<p>The conditional's code decrements <code>x</code>, while returning <code>x</code>'s original (not decremented) value, and then compares the original value with <code>0</code> using the <code>&gt;</code> operator.</p>\n" +
    '<p><strong>To better understand, the statement could be written as follows:</strong></p>\n' +
    '<pre class="lang-c prettyprint-override"><code>while( (x--) &gt; 0 )\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>Or for something completely different... <code>x</code> slides to <code>0</code>.</p>\n' +
    '\n' +
    '<pre><code>while (x --\\\n' +
    '            \\\n' +
    '             \\\n' +
    '              \\\n' +
    '               &gt; 0)\n' +
    '     printf("%d ", x);\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Not so mathematical, but... every picture paints a thousand words...</p>\n' +
    '    ',
  '\n' +
    `<p>That's a very complicated operator, so even <a href="https://isocpp.org/std/the-committee" rel="noreferrer">ISO/IEC JTC1 (Joint Technical Committee 1)</a> placed its description in two different parts of the C++ Standard.</p>\n` +
    '\n' +
    '<p>Joking aside, they are two different operators: <code>--</code> and <code>&gt;</code> described respectively in §5.2.6/2 and §5.9 of the C++03 Standard.</p>\n' +
    '    ',
  '\n' +
    '<p><code>x</code> can go to zero even faster in the opposite direction in C++:</p>\n' +
    '<pre><code>int x = 10;\n' +
    '\n' +
    'while( 0 &lt;---- x )\n' +
    '{\n' +
    '   printf("%d ", x);\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p><code>8 6 4 2 </code></p>\n' +
    '<p>You can control speed with an arrow!</p>\n' +
    '<pre><code>int x = 100;\n' +
    '\n' +
    'while( 0 &lt;-------------------- x )\n' +
    '{\n' +
    '   printf("%d ", x);\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p><code>90 80 70 60 50 40 30 20 10 </code></p>\n' +
    '<p>;)</p>\n' +
    '    ',
  '\n' +
    "<p>It's equivalent to</p>\n" +
    '<pre class="lang-c prettyprint-override"><code>while (x-- &gt; 0)\n' +
    '</code></pre>\n' +
    '<p><code>x--</code> (post decrement) is equivalent to <code>x = x-1</code> (but returning the original value of <code>x</code>), so the code transforms to:</p>\n' +
    '<pre><code>while(x &gt; 0) {\n' +
    '    x = x-1;\n' +
    '    // logic\n' +
    '}\n' +
    'x--;   // The post decrement done when x &lt;= 0\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    "<p>It's</p>\n" +
    '<pre><code>#include &lt;stdio.h&gt;\n' +
    '\n' +
    'int main(void) {\n' +
    '  int x = 10;\n' +
    '  while (x-- &gt; 0) { // x goes to 0\n' +
    '    printf("%d ", x);\n' +
    '  }\n' +
    '  return 0;\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p>Just the space makes the things look funny, <code>--</code> decrements and <code>&gt;</code> compares.</p>\n' +
    '    ',
  '\n' +
    '<p>The usage of <code>--&gt;</code> has historical relevance. Decrementing was (and still is in some cases), faster than incrementing on the x86 architecture. Using <code>--&gt;</code> suggests that <code>x</code> is going to <code>0</code>, and appeals to those with mathematical backgrounds.</p>\n' +
    '    ',
  '\n' +
    '<p>Utterly geek, but I will be using this:</p>\n' +
    '\n' +
    '<pre><code>#define as ;while\n' +
    '\n' +
    'int main(int argc, char* argv[])\n' +
    '{\n' +
    '    int n = atoi(argv[1]);\n' +
    '    do printf("n is %d\\n", n) as ( n --&gt; 0);\n' +
    '    return 0;\n' +
    '}\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<pre class="lang-c prettyprint-override"><code>while( x-- &gt; 0 )\n' +
    '</code></pre>\n' +
    "<p>is how that's parsed.</p>\n" +
    '    ',
  '\n' +
    "<p>One book I read (I don't remember correctly which book) stated: <strong>Compilers try to parse expressions to the biggest token</strong> by using the left right rule.</p>\n" +
    '<p>In this case, the expression:</p>\n' +
    '<pre><code>x--&gt;0\n' +
    '</code></pre>\n' +
    '<p>Parses to biggest tokens:</p>\n' +
    '<pre><code>token 1: x\n' +
    'token 2: --\n' +
    'token 3: &gt;\n' +
    'token 4: 0\n' +
    'conclude: x-- &gt; 0\n' +
    '</code></pre>\n' +
    '<p><strong>The same rule</strong> applies to this expression:</p>\n' +
    '<pre><code>a-----b\n' +
    '</code></pre>\n' +
    '<p>After parse:</p>\n' +
    '<pre><code>token 1: a\n' +
    'token 2: --\n' +
    'token 3: --\n' +
    'token 4: -\n' +
    'token 5: b\n' +
    'conclude: (a--)-- - b\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>This is exactly the same as</p>\n' +
    '<pre><code>while (x--)\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>Anyway, we have a "goes to" operator now. <code>"--&gt;"</code> is easy to be remembered as a direction, and "while x goes to zero" is meaning-straight.</p>\n' +
    '\n' +
    '<p>Furthermore, it is a little more efficient than <code>"for (x = 10; x &gt; 0; x --)"</code> on some platforms.</p>\n' +
    '    ',
  '\n' +
    "<p>This code first compares x and 0 and then decrements x. (Also said in the first answer: You're post-decrementing x and then comparing x and 0 with the <code>&gt;</code> operator.) See the output of this code:</p>\n" +
    '\n' +
    '<pre><code>9 8 7 6 5 4 3 2 1 0\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>We now first compare and then decrement by seeing 0 in the output.</p>\n' +
    '\n' +
    '<p>If we want to first decrement and then compare, use this code:</p>\n' +
    '\n' +
    '<pre><code>#include &lt;stdio.h&gt;\n' +
    'int main(void)\n' +
    '{\n' +
    '    int x = 10;\n' +
    '\n' +
    '    while( --x&gt; 0 ) // x goes to 0\n' +
    '    {\n' +
    '        printf("%d ", x);\n' +
    '    }\n' +
    '    return 0;\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>That output is:</p>\n' +
    '\n' +
    '<pre><code>9 8 7 6 5 4 3 2 1\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>My compiler will print out 9876543210 when I run this code.</p>\n' +
    '\n' +
    '<pre><code>#include &lt;iostream&gt;\n' +
    'int main()\n' +
    '{\n' +
    '    int x = 10;\n' +
    '\n' +
    '    while( x --&gt; 0 ) // x goes to 0\n' +
    '    {\n' +
    '        std::cout &lt;&lt; x;\n' +
    '    }\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>As expected. The <code>while( x-- &gt; 0 )</code> actually means <code>while( x &gt; 0)</code>. The <code>x--</code> post decrements <code>x</code>.</p>\n' +
    '\n' +
    '<pre><code>while( x &gt; 0 ) \n' +
    '{\n' +
    '    x--;\n' +
    '    std::cout &lt;&lt; x;\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>is a different way of writing the same thing.</p>\n' +
    '\n' +
    '<p>It is nice that the original looks like "while x goes to 0" though.</p>\n' +
    '    ',
  '\n' +
    '<p>There is a space missing between <code>--</code> and <code>&gt;</code>. <code>x</code> is post decremented, that is, decremented after checking the condition <code>x&gt;0 ?</code>.</p>\n' +
    '    ',
  '\n' +
    '<p><code>--</code> is the <strong>decrement</strong> operator and <code>&gt;</code> is the <strong>greater-than</strong> operator.</p>\n' +
    '\n' +
    '<p>The two operators are applied as a single one like <code>--&gt;</code>.</p>\n' +
    '    ',
  '\n' +
    "<p>It's a combination of two operators. First <code>--</code> is for decrementing the value, and <code>&gt;</code> is for checking whether the value is greater than the right-hand operand.</p>\n" +
    '\n' +
    '<pre><code>#include&lt;stdio.h&gt;\n' +
    '\n' +
    'int main()\n' +
    '{\n' +
    '    int x = 10;\n' +
    '\n' +
    '    while (x-- &gt; 0)\n' +
    '        printf("%d ",x);\n' +
    '\n' +
    '    return 0;\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>The output will be:</p>\n' +
    '\n' +
    '<pre><code>9 8 7 6 5 4 3 2 1 0            \n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>C and C++ obey the "maximal munch" rule. The same way <code>a---b</code> is translated to <code>(a--) - b</code>, in your case  <code>x--&gt;0</code> translates to <code>(x--)&gt;0</code>.</p>\n' +
    '<p>What the rule says essentially is that going left to right, expressions are formed by taking the maximum of characters which will form a valid token.</p>\n' +
    '    ',
  '\n' +
    "<p>Actually, <code>x</code> is post-decrementing and with that condition is being checked. It's not <code>--&gt;</code>, it's <code>(x--) &gt; 0</code></p>\n" +
    '\n' +
    '<p>Note: value of <code>x</code> is changed after the condition is checked, because it post-decrementing. Some similar cases can also occur, for example:</p>\n' +
    '\n' +
    '<pre><code>--&gt;    x--&gt;0\n' +
    '++&gt;    x++&gt;0\n' +
    '--&gt;=   x--&gt;=0\n' +
    '++&gt;=   x++&gt;=0\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>Instead of regular arrow operator (--&gt;) you can use armor-piercing arrow operator: --x&gt; (note those sharp barbs on the arrow tip). It adds +1 to armor piercing, so it finishes the loop 1 iteration faster than regular arrow operator. Try it yourself:</p>\n' +
    '<pre><code>int x = 10;\n' +
    'while( --x&gt; 0 )\n' +
    '    printf("%d ", x);\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    "<pre><code>char sep = '\\n'  /1\\\n" +
    '; int i = 68    /1  \\\n' +
    '; while (i  ---      1\\\n' +
    '                       \\\n' +
    '                       /1/1/1                               /1\\\n' +
    '                                                            /1\\\n' +
    '                                                            /1\\\n' +
    '                                                            /1\\\n' +
    '                                                            /1\\\n' +
    '                            /           1\\\n' +
    '                           /            1 \\\n' +
    '                          /             1  \\\n' +
    '                         /              1   \\\n' +
    '                         /1            /1    \\\n' +
    '                          /1          /1      \\\n' +
    '                           /1        /1        /1/1&gt; 0) std::cout \\\n' +
    '                              &lt;&lt;i&lt;&lt;                               sep;\n' +
    '</code></pre>\n' +
    '<p>For larger numbers, C++20 introduces some more advanced looping features.\n' +
    "First to catch <code>i</code> we can build an inverse loop-de-loop and deflect it onto the <code>std::ostream</code>. However, the speed of <code>i</code> is implementation-defined, so we can use the new C++20 speed operator <code>&lt;&lt;i&lt;&lt;</code> to speed it up. We must also catch it by building wall, if we don't, <code>i</code> leaves the scope and de referencing it causes undefined behavior. To specify the separator, we can use:</p>\n" +
    '<pre><code> std::cout \\\n' +
    '           sep\n' +
    '</code></pre>\n' +
    '<p>and there we have a for loop from 67 to 1.</p>\n' +
    '    ',
  '\n' +
    '<p>Why all the complication?</p>\n' +
    '<p>The simple answer to the original question is just:</p>\n' +
    '<pre><code>#include &lt;stdio.h&gt;\n' +
    '\n' +
    'int main()\n' +
    '{\n' +
    '    int x = 10;\n' +
    '    while (x &gt; 0)\n' +
    '    {\n' +
    '        printf("%d ", x);\n' +
    '        x = x-1;\n' +
    '    }\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p>It does the same thing. I am not saying you should do it like this, but it does the same thing and would have answered the question in one post.</p>\n' +
    '<p>The <code>x--</code> is just shorthand for the above, and <code>&gt;</code> is just a normal greater-than <code>operator</code>. No big mystery!</p>\n' +
    '<p>There are too many people making simple things complicated nowadays  ;)</p>\n' +
    '    ',
  '\n' +
    '<p>Conventional way we define condition in while loop parenthesis"<code>()</code>" and terminating condition inside the braces"<code>{}</code>", but this <code>--</code> &amp; <code>&gt;</code> is a way one defines all at once.\n' +
    'For example:</p>\n' +
    '<pre><code>int abc(){\n' +
    '    int a = 5\n' +
    '    while((a--) &gt; 0){ // Decrement and comparison both at once\n' +
    '        // Code\n' +
    '    }\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p>It says, decrement <code>a</code> and run the loop till the time <code>a</code> is greater than <code>0</code></p>\n' +
    '<p>Other way it should have been like:</p>\n' +
    '<pre><code>int abc() {\n' +
    '    int a = 5;\n' +
    '    while(a &gt; 0) {\n' +
    '        a = a -1 // Decrement inside loop\n' +
    '        // Code\n' +
    '    }\n' +
    '}\n' +
    '</code></pre>\n' +
    '<p>Both ways, we do the same thing and achieve the same goals.</p>\n' +
    '    ',
  '\n' +
    '<p><code>(x --&gt; 0)</code> means <code>(x-- &gt; 0)</code>.</p>\n' +
    '<ol>\n' +
    '<li>You can use <code>(x --&gt;)</code><br>\n' +
    '<code>Output: 9 8 7 6 5 4 3 2 1 0</code></li>\n' +
    '</ol>\n' +
    '<blockquote>\n' +
    '</blockquote>\n' +
    '<ol start="2">\n' +
    "<li>You can use <code>(-- x &gt; 0)</code>  It's mean <code>(--x &gt; 0)</code><br>\n" +
    '<code>Output: 9 8 7 6 5 4 3 2 1</code></li>\n' +
    '</ol>\n' +
    '<blockquote>\n' +
    '</blockquote>\n' +
    '<ol start="3">\n' +
    '<li>You can use</li>\n' +
    '</ol>\n' +
    '<pre><code>(--\\\n' +
    '    \\\n' +
    '     x &gt; 0)\n' +
    '</code></pre>\n' +
    '<p><code>Output:  9 8 7 6 5 4 3 2 1</code></p>\n' +
    '<ol start="4">\n' +
    '<li>You can use</li>\n' +
    '</ol>\n' +
    '<pre><code>(\\\n' +
    '  \\\n' +
    '   x --&gt; 0)\n' +
    '</code></pre>\n' +
    '<p><code>Output: 9 8 7 6 5 4 3 2 1 0</code></p>\n' +
    '<ol start="5">\n' +
    '<li>You can use</li>\n' +
    '</ol>\n' +
    '<pre><code>(\\\n' +
    '  \\\n' +
    '   x --&gt; 0\n' +
    '          \\\n' +
    '           \\\n' +
    '            )\n' +
    '</code></pre>\n' +
    '<p><code>Output: 9 8 7 6 5 4 3 2 1 0</code></p>\n' +
    '<ol start="6">\n' +
    '<li>You can use also</li>\n' +
    '</ol>\n' +
    '<pre><code>(\n' +
    ' x \n' +
    '  --&gt; \n' +
    '      0\n' +
    '       )\n' +
    '</code></pre>\n' +
    '<p><code>Output: 9 8 7 6 5 4 3 2 1 0</code></p>\n' +
    '<p>Likewise, you can try lot of methods to execute this command successfully.</p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    "<p>I'm asking for a template trick to detect if a class has a specific member function of a given signature.</p>\n" +
    '\n' +
    '<p>The problem is similar to the one cited here\n' +
    '<a href="http://www.gotw.ca/gotw/071.htm" rel="noreferrer">http://www.gotw.ca/gotw/071.htm</a>\n' +
    `but not the same: in the item of Sutter's book he answered to the question that a class C MUST PROVIDE  a member function with a particular signature, else the program won't compile. In my problem I need to do something if a class has that function, else do "something else". </p>\n` +
    '\n' +
    `<p>A similar problem was faced by boost::serialization but I don't like the solution they adopted: a template function that invokes by default a free function (that you have to define) with a particular signature unless you define a particular member function (in their case "serialize" that takes 2 parameters of a given type) with a particular signature, else a compile error will happens. That is to implement both intrusive and non-intrusive serialization. </p>\n` +
    '\n' +
    "<p>I don't like that solution for two reasons:</p>\n" +
    '\n' +
    '<ol>\n' +
    '<li>To be non intrusive you must override the global "serialize" function that is in boost::serialization namespace, so you have IN YOUR CLIENT CODE to open namespace boost and namespace serialization!</li>\n' +
    '<li>The stack to resolve that\n' +
    'mess was 10 to 12 function invocations.</li>\n' +
    '</ol>\n' +
    '\n' +
    "<p>I need to define a custom behavior for classes that has not that member function, and my entities are inside different namespaces (and I don't want to override a global function defined in one namespace while I'm in another one)</p>\n" +
    '\n' +
    '<p>Can you give me a hint to solve this puzzle?</p>\n' +
    '    ',
  '\n' +
    `<p>Here's a possible implementation relying on C++11 features. It correctly detects the function even if it's inherited (unlike the solution in the accepted answer, as Mike Kinghan observes in <a href="https://stackoverflow.com/a/10707822/947836">his answer</a>).</p>\n` +
    '\n' +
    '<p>The function this snippet tests for is called <code>serialize</code>:</p>\n' +
    '\n' +
    '<pre><code>#include &lt;type_traits&gt;\n' +
    '\n' +
    '// Primary template with a static assertion\n' +
    '// for a meaningful error message\n' +
    '// if it ever gets instantiated.\n' +
    "// We could leave it undefined if we didn't care.\n" +
    '\n' +
    'template&lt;typename, typename T&gt;\n' +
    'struct has_serialize {\n' +
    '    static_assert(\n' +
    '        std::integral_constant&lt;T, false&gt;::value,\n' +
    '        "Second template parameter needs to be of function type.");\n' +
    '};\n' +
    '\n' +
    '// specialization that does the checking\n' +
    '\n' +
    'template&lt;typename C, typename Ret, typename... Args&gt;\n' +
    'struct has_serialize&lt;C, Ret(Args...)&gt; {\n' +
    'private:\n' +
    '    template&lt;typename T&gt;\n' +
    '    static constexpr auto check(T*)\n' +
    '    -&gt; typename\n' +
    '        std::is_same&lt;\n' +
    '            decltype( std::declval&lt;T&gt;().serialize( std::declval&lt;Args&gt;()... ) ),\n' +
    '            Ret    // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n' +
    '        &gt;::type;  // attempt to call it and see if the return type is correct\n' +
    '\n' +
    '    template&lt;typename&gt;\n' +
    '    static constexpr std::false_type check(...);\n' +
    '\n' +
    '    typedef decltype(check&lt;C&gt;(0)) type;\n' +
    '\n' +
    'public:\n' +
    '    static constexpr bool value = type::value;\n' +
    '};\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Usage:</p>\n' +
    '\n' +
    '<pre><code>struct X {\n' +
    '     int serialize(const std::string&amp;) { return 42; } \n' +
    '};\n' +
    '\n' +
    'struct Y : X {};\n' +
    '\n' +
    'std::cout &lt;&lt; has_serialize&lt;Y, int(const std::string&amp;)&gt;::value; // will print 1\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    "<p>I'm not sure if I understand you correctly, but you may exploit SFINAE to detect function presence at compile-time. Example from my code (tests if class has member function size_t used_memory() const).</p>\n" +
    '\n' +
    '<pre><code>template&lt;typename T&gt;\n' +
    'struct HasUsedMemoryMethod\n' +
    '{\n' +
    '    template&lt;typename U, size_t (U::*)() const&gt; struct SFINAE {};\n' +
    '    template&lt;typename U&gt; static char Test(SFINAE&lt;U, &amp;U::used_memory&gt;*);\n' +
    '    template&lt;typename U&gt; static int Test(...);\n' +
    '    static const bool Has = sizeof(Test&lt;T&gt;(0)) == sizeof(char);\n' +
    '};\n' +
    '\n' +
    'template&lt;typename TMap&gt;\n' +
    'void ReportMemUsage(const TMap&amp; m, std::true_type)\n' +
    '{\n' +
    '        // We may call used_memory() on m here.\n' +
    '}\n' +
    'template&lt;typename TMap&gt;\n' +
    'void ReportMemUsage(const TMap&amp;, std::false_type)\n' +
    '{\n' +
    '}\n' +
    'template&lt;typename TMap&gt;\n' +
    'void ReportMemUsage(const TMap&amp; m)\n' +
    '{\n' +
    '    ReportMemUsage(m, \n' +
    '        std::integral_constant&lt;bool, HasUsedMemoryMethod&lt;TMap&gt;::Has&gt;());\n' +
    '}\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>The accepted answer to this question of compiletime member-function\n' +
    'introspection, although it is justly popular, has a snag which can be observed\n' +
    'in the following program:</p>\n' +
    '\n' +
    '<pre><code>#include &lt;type_traits&gt;\n' +
    '#include &lt;iostream&gt;\n' +
    '#include &lt;memory&gt;\n' +
    '\n' +
    "/*  Here we apply the accepted answer's technique to probe for the\n" +
    '    the existence of `E T::operator*() const`\n' +
    '*/\n' +
    'template&lt;typename T, typename E&gt;\n' +
    'struct has_const_reference_op\n' +
    '{\n' +
    '    template&lt;typename U, E (U::*)() const&gt; struct SFINAE {};\n' +
    '    template&lt;typename U&gt; static char Test(SFINAE&lt;U, &amp;U::operator*&gt;*);\n' +
    '    template&lt;typename U&gt; static int Test(...);\n' +
    '    static const bool value = sizeof(Test&lt;T&gt;(0)) == sizeof(char);\n' +
    '};\n' +
    '\n' +
    'using namespace std;\n' +
    '\n' +
    '/* Here we test the `std::` smart pointer templates, including the\n' +
    '    deprecated `auto_ptr&lt;T&gt;`, to determine in each case whether\n' +
    '    T = (the template instantiated for `int`) provides \n' +
    '    `int &amp; T::operator*() const` - which all of them in fact do.\n' +
    '*/ \n' +
    'int main(void)\n' +
    '{\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;auto_ptr&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;unique_ptr&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;shared_ptr&lt;int&gt;,int &amp;&gt;::value &lt;&lt; endl;\n' +
    '    return 0;\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Built with GCC 4.6.3, the program outputs <code>110</code> - informing us that \n' +
    '<code>T = std::shared_ptr&lt;int&gt;</code> does <em>not</em> provide <code>int &amp; T::operator*() const</code>.</p>\n' +
    '\n' +
    '<p>If you are not already wise to this gotcha, then a look at of the definition of\n' +
    '<code>std::shared_ptr&lt;T&gt;</code> in the header <code>&lt;memory&gt;</code> will shed light. In that\n' +
    'implementation, <code>std::shared_ptr&lt;T&gt;</code> is derived from a base class\n' +
    'from which it inherits <code>operator*() const</code>. So the template instantiation\n' +
    '<code>SFINAE&lt;U, &amp;U::operator*&gt;</code> that constitutes "finding" the operator for\n' +
    '<code>U = std::shared_ptr&lt;T&gt;</code> will not happen, because <code>std::shared_ptr&lt;T&gt;</code> has no\n' +
    '<code>operator*()</code> in its own right and template instantiation does not\n' +
    '"do inheritance".</p>\n' +
    '\n' +
    '<p>This snag does not affect the well-known SFINAE approach, using "The sizeof() Trick",\n' +
    'for detecting merely whether <code>T</code> has some member function <code>mf</code> (see e.g.\n' +
    '<a href="https://stackoverflow.com/a/257382/1362568">this answer</a> and comments). But\n' +
    'establishing that <code>T::mf</code> exists is often (usually?) not good enough: you may\n' +
    'also need to establish that it has a desired signature. That is where the\n' +
    'illustrated technique scores. The pointerized variant of the desired signature\n' +
    'is inscribed in a parameter of a template type that must be satisfied by\n' +
    '<code>&amp;T::mf</code> for the SFINAE probe to succeed. But this template instantiating\n' +
    'technique gives the wrong answer when <code>T::mf</code> is inherited.</p>\n' +
    '\n' +
    '<p>A safe SFINAE technique for compiletime introspection of <code>T::mf</code> must avoid the\n' +
    'use of <code>&amp;T::mf</code> within a template argument to instantiate a type upon which SFINAE\n' +
    'function template resolution depends. Instead, SFINAE template function\n' +
    'resolution can depend only upon exactly pertinent type declarations used\n' +
    'as argument types of the overloaded SFINAE probe function.</p>\n' +
    '\n' +
    "<p>By way of an answer to the question that abides by this constraint I'll\n" +
    'illustrate for compiletime detection of <code>E T::operator*() const</code>, for\n' +
    'arbitrary <code>T</code> and <code>E</code>. The same pattern will apply <em>mutatis mutandis</em>\n' +
    'to probe for any other member method signature.</p>\n' +
    '\n' +
    '<pre><code>#include &lt;type_traits&gt;\n' +
    '\n' +
    '/*! The template `has_const_reference_op&lt;T,E&gt;` exports a\n' +
    '    boolean constant `value that is true iff `T` provides\n' +
    '    `E T::operator*() const`\n' +
    '*/ \n' +
    'template&lt; typename T, typename E&gt;\n' +
    'struct has_const_reference_op\n' +
    '{\n' +
    '    /* SFINAE operator-has-correct-sig :) */\n' +
    '    template&lt;typename A&gt;\n' +
    '    static std::true_type test(E (A::*)() const) {\n' +
    '        return std::true_type();\n' +
    '    }\n' +
    '\n' +
    '    /* SFINAE operator-exists :) */\n' +
    '    template &lt;typename A&gt; \n' +
    '    static decltype(test(&amp;A::operator*)) \n' +
    '    test(decltype(&amp;A::operator*),void *) {\n' +
    '        /* Operator exists. What about sig? */\n' +
    '        typedef decltype(test(&amp;A::operator*)) return_type; \n' +
    '        return return_type();\n' +
    '    }\n' +
    '\n' +
    '    /* SFINAE game over :( */\n' +
    '    template&lt;typename A&gt;\n' +
    '    static std::false_type test(...) {\n' +
    '        return std::false_type(); \n' +
    '    }\n' +
    '\n' +
    '    /* This will be either `std::true_type` or `std::false_type` */\n' +
    '    typedef decltype(test&lt;T&gt;(0,0)) type;\n' +
    '\n' +
    '    static const bool value = type::value; /* Which is it? */\n' +
    '};\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>In this solution, the overloaded SFINAE probe function <code>test()</code> is "invoked\n' +
    `recursively". (Of course it isn't actually invoked at all; it merely has\n` +
    'the return types of hypothetical invocations resolved by the compiler.)</p>\n' +
    '\n' +
    '<p>We need to probe for at least one and at most two points of information:</p>\n' +
    '\n' +
    '<ul>\n' +
    "<li>Does <code>T::operator*()</code> exist at all? If not, we're done.</li>\n" +
    '<li>Given that <code>T::operator*()</code> exists, is its signature \n' +
    '<code>E T::operator*() const</code>?</li>\n' +
    '</ul>\n' +
    '\n' +
    '<p>We get the answers by evaluating the return type of a single call\n' +
    "to <code>test(0,0)</code>. That's done by:</p>\n" +
    '\n' +
    '<pre><code>    typedef decltype(test&lt;T&gt;(0,0)) type;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>This call might be resolved to the <code>/* SFINAE operator-exists :) */</code> overload\n' +
    'of <code>test()</code>, or it might resolve to the <code>/* SFINAE game over :( */</code> overload.\n' +
    "It can't resolve to the <code>/* SFINAE operator-has-correct-sig :) */</code> overload,\n" +
    'because that one expects just one argument and we are passing two.</p>\n' +
    '\n' +
    '<p>Why are we passing two? Simply to force the resolution to exclude \n' +
    '<code>/* SFINAE operator-has-correct-sig :) */</code>. The second argument has no other signifance.</p>\n' +
    '\n' +
    '<p>This call to <code>test(0,0)</code> will resolve to <code>/* SFINAE operator-exists :) */</code> just\n' +
    'in case the first argument 0 satifies the first parameter type of that overload,\n' +
    'which is <code>decltype(&amp;A::operator*)</code>, with <code>A = T</code>. 0 will satisfy that type\n' +
    'just in case <code>T::operator*</code> exists.</p>\n' +
    '\n' +
    "<p>Let's suppose the compiler say's Yes to that. Then it's going with\n" +
    '<code>/* SFINAE operator-exists :) */</code> and it needs to determine the return type of\n' +
    'the function call, which in that case is <code>decltype(test(&amp;A::operator*))</code> -\n' +
    'the return type of yet another call to <code>test()</code>.</p>\n' +
    '\n' +
    "<p>This time, we're passing just one argument, <code>&amp;A::operator*</code>, which we now\n" +
    "know exists, or we wouldn't be here. A call to <code>test(&amp;A::operator*)</code> might\n" +
    'resolve either to <code>/* SFINAE operator-has-correct-sig :) */</code> or again to\n' +
    'might resolve to <code>/* SFINAE game over :( */</code>. The call will match \n' +
    '<code>/* SFINAE operator-has-correct-sig :) */</code> just in case <code>&amp;A::operator*</code> satisfies\n' +
    'the single parameter type of that overload, which is <code>E (A::*)() const</code>,\n' +
    'with <code>A = T</code>.</p>\n' +
    '\n' +
    '<p>The compiler will say Yes here if <code>T::operator*</code> has that desired signature,\n' +
    'and then again has to evaluate the return type of the overload. No more\n' +
    '"recursions" now: it is <code>std::true_type</code>.</p>\n' +
    '\n' +
    '<p>If the compiler does not choose <code>/* SFINAE operator-exists :) */</code> for the\n' +
    'call <code>test(0,0)</code> or does not choose <code>/* SFINAE operator-has-correct-sig :) */</code>\n' +
    'for the call <code>test(&amp;A::operator*)</code>, then in either case it goes with\n' +
    '<code>/* SFINAE game over :( */</code> and the final return type is <code>std::false_type</code>.</p>\n' +
    '\n' +
    '<p>Here is a test program that shows the template producing the expected\n' +
    'answers in varied sample of cases (GCC 4.6.3 again).</p>\n' +
    '\n' +
    '<pre><code>// To test\n' +
    'struct empty{};\n' +
    '\n' +
    '// To test \n' +
    'struct int_ref\n' +
    '{\n' +
    '    int &amp; operator*() const {\n' +
    '        return *_pint;\n' +
    '    }\n' +
    '    int &amp; foo() const {\n' +
    '        return *_pint;\n' +
    '    }\n' +
    '    int * _pint;\n' +
    '};\n' +
    '\n' +
    '// To test \n' +
    'struct sub_int_ref : int_ref{};\n' +
    '\n' +
    '// To test \n' +
    'template&lt;typename E&gt;\n' +
    'struct ee_ref\n' +
    '{\n' +
    '    E &amp; operator*() {\n' +
    '        return *_pe;\n' +
    '    }\n' +
    '    E &amp; foo() const {\n' +
    '        return *_pe;\n' +
    '    }\n' +
    '    E * _pe;\n' +
    '};\n' +
    '\n' +
    '// To test \n' +
    'struct sub_ee_ref : ee_ref&lt;char&gt;{};\n' +
    '\n' +
    'using namespace std;\n' +
    '\n' +
    '#include &lt;iostream&gt;\n' +
    '#include &lt;memory&gt;\n' +
    '#include &lt;vector&gt;\n' +
    '\n' +
    'int main(void)\n' +
    '{\n' +
    '    cout &lt;&lt; "Expect Yes" &lt;&lt; endl;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;auto_ptr&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;unique_ptr&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;shared_ptr&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;std::vector&lt;int&gt;::iterator,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;std::vector&lt;int&gt;::const_iterator,\n' +
    '            int const &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;int_ref,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;sub_int_ref,int &amp;&gt;::value  &lt;&lt; endl;\n' +
    '    cout &lt;&lt; "Expect No" &lt;&lt; endl;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;int *,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;unique_ptr&lt;int&gt;,char &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;unique_ptr&lt;int&gt;,int const &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;unique_ptr&lt;int&gt;,int&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;unique_ptr&lt;long&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;int,int&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;std::vector&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;ee_ref&lt;int&gt;,int &amp;&gt;::value;\n' +
    '    cout &lt;&lt; has_const_reference_op&lt;sub'... 276 more characters,
  '\n' +
    '<p>Here are some usage snippets:\n' +
    '*The guts for all this are farther down</p>\n' +
    '\n' +
    '<p><strong>Check for member <code>x</code> in a given class.  Could be var, func, class, union, or enum:</strong></p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_CHECK(x);\n' +
    'bool has_x = has_member_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Check for member function <code>void x()</code>:</strong></p>\n' +
    '\n' +
    '<pre><code>//Func signature MUST have T as template variable here... simpler this way :\\\n' +
    'CREATE_MEMBER_FUNC_SIG_CHECK(x, void (T::*)(), void__x);\n' +
    'bool has_func_sig_void__x = has_member_func_void__x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Check for member variable <code>x</code>:</strong></p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_VAR_CHECK(x);\n' +
    'bool has_var_x = has_member_var_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Check for member class <code>x</code>:</strong></p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_CLASS_CHECK(x);\n' +
    'bool has_class_x = has_member_class_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Check for member union <code>x</code>:</strong></p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_UNION_CHECK(x);\n' +
    'bool has_union_x = has_member_union_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Check for member enum <code>x</code>:</strong></p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_ENUM_CHECK(x);\n' +
    'bool has_enum_x = has_member_enum_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Check for any member function <code>x</code> regardless of signature:</strong></p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_CHECK(x);\n' +
    'CREATE_MEMBER_VAR_CHECK(x);\n' +
    'CREATE_MEMBER_CLASS_CHECK(x);\n' +
    'CREATE_MEMBER_UNION_CHECK(x);\n' +
    'CREATE_MEMBER_ENUM_CHECK(x);\n' +
    'CREATE_MEMBER_FUNC_CHECK(x);\n' +
    'bool has_any_func_x = has_member_func_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>OR</p>\n' +
    '\n' +
    '<pre><code>CREATE_MEMBER_CHECKS(x);  //Just stamps out the same macro calls as above.\n' +
    'bool has_any_func_x = has_member_func_x&lt;class_to_check_for_x&gt;::value;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>Details and core:</strong></p>\n' +
    '\n' +
    '<pre><code>/*\n' +
    '    - Multiple inheritance forces ambiguity of member names.\n' +
    '    - SFINAE is used to make aliases to member names.\n' +
    '    - Expression SFINAE is used in just one generic has_member that can accept\n' +
    '      any alias we pass it.\n' +
    '*/\n' +
    '\n' +
    '//Variadic to force ambiguity of class members.  C++11 and up.\n' +
    'template &lt;typename... Args&gt; struct ambiguate : public Args... {};\n' +
    '\n' +
    '//Non-variadic version of the line above.\n' +
    '//template &lt;typename A, typename B&gt; struct ambiguate : public A, public B {};\n' +
    '\n' +
    'template&lt;typename A, typename = void&gt;\n' +
    'struct got_type : std::false_type {};\n' +
    '\n' +
    'template&lt;typename A&gt;\n' +
    'struct got_type&lt;A&gt; : std::true_type {\n' +
    '    typedef A type;\n' +
    '};\n' +
    '\n' +
    'template&lt;typename T, T&gt;\n' +
    'struct sig_check : std::true_type {};\n' +
    '\n' +
    'template&lt;typename Alias, typename AmbiguitySeed&gt;\n' +
    'struct has_member {\n' +
    '    template&lt;typename C&gt; static char ((&amp;f(decltype(&amp;C::value))))[1];\n' +
    '    template&lt;typename C&gt; static char ((&amp;f(...)))[2];\n' +
    '\n' +
    '    //Make sure the member name is consistently spelled the same.\n' +
    '    static_assert(\n' +
    '        (sizeof(f&lt;AmbiguitySeed&gt;(0)) == 1)\n' +
    '        , "Member name specified in AmbiguitySeed is different from member name specified in Alias, or wrong Alias/AmbiguitySeed has been specified."\n' +
    '    );\n' +
    '\n' +
    '    static bool const value = sizeof(f&lt;Alias&gt;(0)) == 2;\n' +
    '};\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><em><strong>Macros (El Diablo!):</strong></em></p>\n' +
    '\n' +
    '<p><strong>CREATE_MEMBER_CHECK:</strong></p>\n' +
    '\n' +
    '<pre><code>//Check for any member with given name, whether var, func, class, union, enum.\n' +
    '#define CREATE_MEMBER_CHECK(member)                                         \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T, typename = std::true_type&gt;                             \\\n' +
    'struct Alias_##member;                                                      \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T&gt;                                                        \\\n' +
    'struct Alias_##member &lt;                                                     \\\n' +
    '    T, std::integral_constant&lt;bool, got_type&lt;decltype(&amp;T::member)&gt;::value&gt;  \\\n' +
    '&gt; { static const decltype(&amp;T::member) value; };                             \\\n' +
    '                                                                            \\\n' +
    'struct AmbiguitySeed_##member { char member; };                             \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T&gt;                                                        \\\n' +
    'struct has_member_##member {                                                \\\n' +
    '    static const bool value                                                 \\\n' +
    '        = has_member&lt;                                                       \\\n' +
    '            Alias_##member&lt;ambiguate&lt;T, AmbiguitySeed_##member&gt;&gt;            \\\n' +
    '            , Alias_##member&lt;AmbiguitySeed_##member&gt;                        \\\n' +
    '        &gt;::value                                                            \\\n' +
    '    ;                                                                       \\\n' +
    '}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>CREATE_MEMBER_VAR_CHECK:</strong></p>\n' +
    '\n' +
    '<pre><code>//Check for member variable with given name.\n' +
    '#define CREATE_MEMBER_VAR_CHECK(var_name)                                   \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T, typename = std::true_type&gt;                             \\\n' +
    'struct has_member_var_##var_name : std::false_type {};                      \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T&gt;                                                        \\\n' +
    'struct has_member_var_##var_name&lt;                                           \\\n' +
    '    T                                                                       \\\n' +
    '    , std::integral_constant&lt;                                               \\\n' +
    '        bool                                                                \\\n' +
    '        , !std::is_member_function_pointer&lt;decltype(&amp;T::var_name)&gt;::value   \\\n' +
    '    &gt;                                                                       \\\n' +
    '&gt; : std::true_type {}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>CREATE_MEMBER_FUNC_SIG_CHECK:</strong></p>\n' +
    '\n' +
    '<pre><code>//Check for member function with given name AND signature.\n' +
    '#define CREATE_MEMBER_FUNC_SIG_CHECK(func_name, func_sig, templ_postfix)    \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T, typename = std::true_type&gt;                             \\\n' +
    'struct has_member_func_##templ_postfix : std::false_type {};                \\\n' +
    '                                                                            \\\n' +
    'template&lt;typename T&gt;                                                        \\\n' +
    'struct has_member_func_##templ_postfix&lt;                                     \\\n' +
    '    T, std::integral_constant&lt;                                              \\\n' +
    '        bool                                                                \\\n' +
    '        , sig_check&lt;func_sig, &amp;T::func_name&gt;::value                         \\\n' +
    '    &gt;                                                                       \\\n' +
    '&gt; : std::true_type {}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>CREATE_MEMBER_CLASS_CHECK:</strong></p>\n' +
    '\n' +
    '<pre><code>//Check for member class with given name.\n' +
    '#define CREATE_MEMBER_CLASS_CHECK(class_name)               \\\n' +
    '                                                            \\\n' +
    'template&lt;typename T, typename = std::true_type&gt;             \\\n' +
    'struct has_member_class_##class_name : std::false_type {};  \\\n' +
    '                                                            \\\n' +
    'template&lt;typename T&gt;                                        \\\n' +
    'struct has_member_class_##class_name&lt;                       \\\n' +
    '    T                                                       \\\n' +
    '    , std::integral_constant&lt;                               \\\n' +
    '        bool                                                \\\n' +
    '        , std::is_class&lt;                                    \\\n' +
    '            typename got_type&lt;typename T::class_name&gt;::type \\\n' +
    '        &gt;::value                                            \\\n' +
    '    &gt;                                                       \\\n' +
    '&gt; : std::true_type {}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>CREATE_MEMBER_UNION_CHECK:</strong></p>\n' +
    '\n' +
    '<pre><code>//Check for member union with given name.\n' +
    '#define CREATE_MEMBER_UNION_CHECK(union_name)               \\\n' +
    '                                                            \\\n' +
    'template&lt;typename T, typename = std::true_type&gt;             \\\n' +
    'struct has_member_union_##union_name : std::false_type {};  \\\n' +
    '                                                            \\\n' +
    'template&lt;typename T&gt;                                        \\\n' +
    'struct has_member_union_##union_name&lt;                       \\\n' +
    '    T                                                       \\\n' +
    '    , std::integral_constant&lt;                               \\\n' +
    '        bool                                                \\\n' +
    '        , std::is_union&lt;                                    \\\n' +
    '            typename got_type&lt;typename T::union_name&gt;::type \\\n' +
    '        &gt;::value                                            \\\n' +
    '    &gt;                                                       \\\n' +
    '&gt; : std::true_type {}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p><strong>CREATE_MEMBER_ENUM_CHECK:</strong></p>\n' +
    '\n' +
    '<pre><code>//Check for member enum with given name.\n' +
    '#define CREATE_MEMBER_ENUM_CHECK(enum_name)                 \\\n' +
    '                                                            \\\n' +
    'template&lt;typename T, typename = std::true_type&gt;             \\\n' +
    'struct has_member_enum_##enum_name : std::false_type {};    \\\n' +
    '                                                            \\\n' +
    'template&lt;typename T&gt;                                        \\\n' +
    'struct has_member_enum_##enum_name&lt;                         \\\n' +
    '    T    '... 1619 more characters,
  '\n' +
    '<p>This should be sufficient, if you know the name of the member function you are expecting. (In this case, the function bla fails to instantiate if there is no member function (writing one that works anyway is tough because there is a lack of function partial specialization. You may need to use class templates) Also, the enable struct (which is similar to enable_if) could also be templated on the type of function you want it to have as a member.</p>\n' +
    '\n' +
    '<pre><code>template &lt;typename T, int (T::*) ()&gt; struct enable { typedef T type; };\n' +
    'template &lt;typename T&gt; typename enable&lt;T, &amp;T::i&gt;::type bla (T&amp;);\n' +
    'struct A { void i(); };\n' +
    'struct B { int i(); };\n' +
    'int main()\n' +
    '{\n' +
    '  A a;\n' +
    '  B b;\n' +
    '  bla(b);\n' +
    '  bla(a);\n' +
    '}\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    '<p>With c++ 20 this becomes much simpler. Say we want to test if a class <code>T</code> has a member function <code>void T::resize(typename T::size_type)</code>. For example, <code>std::vector&lt;U&gt;</code> has such a member function. Then,</p>\n' +
    '<pre class="lang-cpp prettyprint-override"><code>template&lt;typename T&gt;\n' +
    'concept has_resize_member_func = requires {\n' +
    '    typename T::size_type;\n' +
    '    { std::declval&lt;T&gt;().resize(std::declval&lt;typename T::size_type&gt;()) } -&gt; std::same_as&lt;void&gt;;\n' +
    '};\n' +
    '</code></pre>\n' +
    '<p>and the usage is</p>\n' +
    '<pre class="lang-cpp prettyprint-override"><code>static_assert(has_resize_member_func&lt;std::string&gt;, "");\n' +
    'static_assert(has_resize_member_func&lt;int&gt; == false, "");\n' +
    '</code></pre>\n' +
    '    ',
  '\n' +
    "<p>Here is a simpler take on Mike Kinghan's answer. This will detect inherited methods. It will also check for the <em>exact</em> signature (unlike jrok's approach which allows argument conversions).</p>\n" +
    '\n' +
    '<pre><code>template &lt;class C&gt;\n' +
    'class HasGreetMethod\n' +
    '{\n' +
    '    template &lt;class T&gt;\n' +
    '    static std::true_type testSignature(void (T::*)(const char*) const);\n' +
    '\n' +
    '    template &lt;class T&gt;\n' +
    '    static decltype(testSignature(&amp;T::greet)) test(std::nullptr_t);\n' +
    '\n' +
    '    template &lt;class T&gt;\n' +
    '    static std::false_type test(...);\n' +
    '\n' +
    'public:\n' +
    '    using type = decltype(test&lt;C&gt;(nullptr));\n' +
    '    static const bool value = type::value;\n' +
    '};\n' +
    '\n' +
    'struct A { void greet(const char* name) const; };\n' +
    'struct Derived : A { };\n' +
    'static_assert(HasGreetMethod&lt;Derived&gt;::value, "");\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Runnable <a href="http://ideone.com/LjtMSi" rel="noreferrer">example</a></p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>I have a question on how GHCi assumes type of a whole number.</p>\n' +
    '\n' +
    '<p>I was reading Yes-No type class of Learn you a Haskell. </p>\n' +
    '\n' +
    '<p>Here is a link if you want to read the whole thing.\n' +
    '<a href="http://learnyouahaskell.com/making-our-own-types-and-typeclasses#a-yes-no-typeclass" rel="noreferrer">http://learnyouahaskell.com/making-our-own-types-and-typeclasses#a-yes-no-typeclass</a></p>\n' +
    '\n' +
    '<p>To put it shortly, this chapter shows that by defining my own class, I can make a function that works with a lot of types.</p>\n' +
    '\n' +
    '<p>This book defines YesNo class with a function</p>\n' +
    '\n' +
    '<pre><code>yesno :: a -&gt; Bool\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>and make <code>Int</code> as a instance of YesNo class</p>\n' +
    '\n' +
    '<pre><code>instance YesNo Int where\n' +
    '    yesno 0 = False\n' +
    '    yesno _ = True\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>When I loaded this on my GHCi and typed</p>\n' +
    '\n' +
    '<pre><code>yesno 0\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>it returned error. I thought it is probably because GHCi cannot tell whether 0 is meant to be <code>Int</code> or <code>Integer</code> or <code>Double</code> or other type in <code>Num</code> class. Actually when I typed yesno (0::Int) it worked.</p>\n' +
    '\n' +
    '<p>So just for fun I made <code>Integer</code> as an instance of <code>YesNo</code> class and wrote</p>\n' +
    '\n' +
    '<pre><code>instance YesNo Integer where\n' +
    '    yesno 0 = True\n' +
    '    yesno _ = False\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>(Note that I flipped True and False)\n' +
    'and again, I typed </p>\n' +
    '\n' +
    '<pre><code>yesno 0\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>(without any type declaration) then GHCi showed <code>True</code>.</p>\n' +
    '\n' +
    '<p>Moreover, when I typed</p>\n' +
    '\n' +
    '<pre><code>yesno $ fromIntegral 0\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>it returned <code>True</code>, which means that GHCi thinks the type of <code>fromIntegral 0</code> is <code>Integer</code>.</p>\n' +
    '\n' +
    '<p>So, does this mean that when I just type a whole number on GHCi, it usually assumes its value is <code>Integer</code> in stead of? I am confused because <code>:t 0</code> returns <code>Num a =&gt; a</code></p>\n' +
    '    ',
  '\n' +
    `<p>It's type <a href="http://www.haskell.org/onlinereport/haskell2010/haskellch4.html#x10-790004.3.4" rel="noreferrer">defaulting</a> together with ghci's extended default rules.</p>\n` +
    '\n' +
    '<p>Integer literals are polymorphic, they have the type <code>Num a =&gt; a</code> (since they stand for <code>fromInteger literal</code>). But when an expression shall be evaluated - necessary for printing its result, for example - the expression must be given a monomorphic type.</p>\n' +
    '\n' +
    '<p>By itself,</p>\n' +
    '\n' +
    '<pre><code>yesno 0\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>imposes the two constraints <code>Num a</code> and <code>YesNo a</code> on the <code>0</code>, and the entire expression would have the ambiguous type</p>\n' +
    '\n' +
    '<pre><code>yesno 0 :: (Num a, YesNo a) =&gt; Bool\n' +
    '</code></pre>\n' +
    '\n' +
    "<p>(it's ambiguous, since the type variable in the constraint is not reachable from the type on the right of the <code>=&gt;</code>).</p>\n" +
    '\n' +
    '<p>Generally, ambiguous types are type errors, however, in some cases the ambiguity is resolved by instantiating the constrained type variable with a default type. The rules in the language specification are that a type variable can be defaulted if</p>\n' +
    '\n' +
    '<blockquote>\n' +
    '  <p>In situations where an ambiguous type is discovered, an ambiguous type variable, <code>v</code>, is defaultable if:</p>\n' +
    '</blockquote>\n' +
    '\n' +
    '<pre><code>- `v` appears only in constraints of the form `C v`, where `C` is a class, and\n' +
    '- at least one of these classes is a numeric class, (that is, `Num` or a subclass of `Num`), and\n' +
    '- all of these classes are defined in the Prelude or a standard library (Figures 6.2–6.3 show the numeric classes, and Figure 6.1 shows the classes defined in the Prelude.)\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>The constraint <code>(Num a, YesNo a)</code> meets the first two requirements, but not the third. So by the language standard, it is not defaultable and should be a type error.</p>\n' +
    '\n' +
    '<p>However, ghci uses extended default rules and also defaults type variables constrained by classes not defined in the Prelude or the standard libraries.</p>\n' +
    '\n' +
    '<p>It would then choose the default for a <code>Num</code> constraint here, unless an explicit default declaration is in scope, that would be <code>Integer</code>, or, if <code>Integer</code> does not satisfy the constraints, <code>Double</code> is tried.</p>\n' +
    '\n' +
    '<p>So when you have an <code>instance YesNo Integer</code>, ghci can successfully default the type variable <code>a</code> to <code>Integer</code>. But with no such instance available, defaulting fails because none of the default candidates has an instance.</p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>I have a business logic method that has to be finished before it can be called again. Multiple clients have the ability to call it at once:</p>\n' +
    '\n' +
    '<pre><code>public void DoSomething() {}\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>I was thinking about solving it by making the method private, and creating a new public method to put the requests on a queue:</p>\n' +
    '\n' +
    '<pre><code>public void QueueSomeWork()\n' +
    '{\n' +
    '    // put on a Queue object\n' +
    '    // How will DoSomething get invoked now?\n' +
    '}\n' +
    '\n' +
    'private void DoSomething() {}\n' +
    '</code></pre>\n' +
    '\n' +
    "<p>I'm trying to solve this issue in an elegant way. My issue is how <code>DoSomething()</code> will know to run. I thought about creating a timer to check the queue, but then it would be running 24/7 for something that happens maybe twice per year.</p>\n" +
    '\n' +
    "<p>Another thought is to have <code>DoSomething()</code> fire an event when it's done that something else would subscribe to, pick some work off the queue, and call <code>DoSomething()</code>. Is there a better way?</p>\n" +
    '    ',
  '\n' +
    "<p>Why don't you use a lock guard? </p>\n" +
    '\n' +
    '<p>Eg :</p>\n' +
    '\n' +
    '<pre><code>   private static Object lockGuard = new Object();\n' +
    '   public void DoSomething()\n' +
    '   {\n' +
    '     lock (lockGuard) \n' +
    '      {\n' +
    '          //logic gere\n' +
    '      }\n' +
    '    }\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Locking a resource will prevent access from multiple threads in the same time. </p>\n' +
    '\n' +
    '<p>More on lock : <a href="http://msdn.microsoft.com/en-us/library/c5kehkcz(v=vs.110).aspx" rel="noreferrer">http://msdn.microsoft.com/en-us/library/c5kehkcz(v=vs.110).aspx</a></p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>I would like to show a small clip from a long video  file that is over 10 minutes long.  This  segment  of video  would start at time offset /seek time of 90 seconds and would have a duration  of 45 seconds . How can I do that  ? </p>\n' +
    '    ',
  '\n' +
    '<p>HTML5 video also supports the <a href="http://www.w3.org/TR/media-frags/" rel="noreferrer">Media Fragment URI</a> spec. This will allow you to specify only a segment of the video to play. Using it is fairly trivial:</p>\n' +
    '\n' +
    '<pre><code>&lt;source src="video.mp4#t=30,45" type="video/mp4"/&gt;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>Will start the video at the 30 second mark and pause the video at the 45 second mark.</p>\n' +
    '    ',
  '\n' +
    '<p>Phillip Brown is right. you can solve this by controlling yout html-player via js. for example in this case, the video would autostart and will play the videofile should 00:10min to 00:40min</p>\n' +
    '\n' +
    '<pre><code>&lt;video id="yourVideoplayer" width="640" height="480" preload="auto"&gt; //preload="auto" buffers the video if initialize. you cannot seek a video which isn t buffering already\n' +
    '  &lt;source src="test.mp4" type="video/mp4" /&gt;\n' +
    '  &lt;source src="test.ogv" type="video/ogg" /&gt; \n' +
    '  This browser is not compatible with HTML 5\n' +
    '&lt;/video&gt;\n' +
    '\n' +
    '&lt;script type="text/javascript"&gt;\n' +
    '   window.onload = playVideoTeaserFrom(10,40);   //this event will call the function after page was loaded\n' +
    '\n' +
    '   function playVideoTeaserFrom (startTime, endTime) {\n' +
    '       var videoplayer = document.getElementById("yourVideoplayer");  //get your videoplayer\n' +
    '\n' +
    '       videoplayer.currentTime = starttime; //not sure if player seeks to seconds or milliseconds\n' +
    '       videoplayer.play();\n' +
    '\n' +
    '       //call function to stop player after given intervall\n' +
    '       var stopVideoAfter = (endTime - startTime) * 1000;  //* 1000, because Timer is in ms\n' +
    '       setTimeout(function(){\n' +
    '           videoplayer.stop();\n' +
    '       }, stopVideoAfter);\n' +
    '\n' +
    '   }\n' +
    ' &lt;/script&gt;\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>there might be some bugs in it, but i guess you ll get the point</p>\n' +
    '    '
]
[
  '\n' +
    '                    <div>\n' +
    '            <aside class="s-notice s-notice__info post-notice js-post-notice mb16" role="status">\n' +
    '        <div class="d-flex fd-column fw-nowrap">\n' +
    '            <div class="d-flex fw-nowrap">\n' +
    '                <div class="flex--item wmn0 fl1 lh-lg">\n' +
    '                    <div class="flex--item fl1 lh-lg">\n' +
    '                        <b>This question already has answers here</b>:\n' +
    '                        \n' +
    '                    </div>\n' +
    '                </div>\n' +
    '            </div>\n' +
    '                    <div class="flex--item mb0 mt4">\n' +
    '                        <a href="/questions/806000/how-do-i-give-text-or-an-image-a-transparent-background-using-css" dir="ltr">How do I give text or an image a transparent background using CSS?</a>\n' +
    '                            <span class="question-originals-answer-count">\n' +
    '                                (29 answers)\n' +
    '                            </span>\n' +
    '                    </div>\n' +
    '                <div class="flex--item mb0 mt8">Closed <span title="2013-06-12 06:41:52Z" class="relativetime">9 years ago</span>.</div>\n' +
    '        </div>\n' +
    '</aside>\n' +
    '\n' +
    '    </div>\n' +
    '\n' +
    "<p>I want to set the opacity of an element to 0. Now if i do this, all the content of the element will inherit this property. I don't want this, i just want the background to get the opacity 0 while the content (the text for example) stays visible</p>\n" +
    '\n' +
    '<p>Any clues ?</p>\n' +
    '\n' +
    '<p>Thanks.</p>\n' +
    '    ',
  '\n' +
    '<p>After some research I found an easy answer - <code>background-color: transparent;</code></p>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>Why do proc and lambda return different values for arity?</p>\n' +
    '\n' +
    '<p>e.g. </p>\n' +
    '\n' +
    '<pre><code>proc   { |x = 0| }.arity       #=&gt; 0\n' +
    'lambda { |a = 0| }.arity       #=&gt; -1\n' +
    'proc   { |x=0, y| }.arity      #=&gt; 1\n' +
    'lambda { |x=0, y| }.arity      #=&gt; -2\n' +
    '</code></pre>\n' +
    '\n' +
    '<p>See: <a href="http://www.ruby-doc.org/core-2.0/Proc.html#method-i-arity" rel="noreferrer">http://www.ruby-doc.org/core-2.0/Proc.html#method-i-arity</a></p>\n' +
    '    ',
  '\n' +
    '<p>Per the docs you linked to:</p>\n' +
    '\n' +
    '<blockquote>\n' +
    '  <p>Returns the number of arguments that would not be ignored. If the block is declared to take no arguments, returns 0. If the block is known to take exactly n arguments, returns n. If the block has optional arguments, return -n-1, where n is the number of mandatory arguments. A proc with no argument declarations is the same a block declaring || as its arguments.</p>\n' +
    '</blockquote>\n' +
    '\n' +
    "<p>What the doc forgets to mention is that procs and lambda don't treat arguments precisely the same way e.g.:</p>\n" +
    '\n' +
    '<pre><code>&gt;&gt; p = proc { |a = 1, b| b }\n' +
    '=&gt; #&lt;Proc:0x007ff0091ef810@(irb):1&gt;\n' +
    '&gt;&gt; l = lambda { |a = 1, b| b }\n' +
    '=&gt; #&lt;Proc:0x007ff0098099f8@(irb):2 (lambda)&gt;\n' +
    '&gt;&gt; p.call\n' +
    '=&gt; nil\n' +
    '&gt;&gt; l.call\n' +
    'ArgumentError: wrong number of arguments (0 for 1..2)\n' +
    "    from (irb):2:in `block in irb_binding'\n" +
    "    from (irb):4:in `call'\n" +
    '    from (irb):4\n' +
    "    from /usr/local/bin/irb:12:in `&lt;main&gt;'\n" +
    '</code></pre>\n' +
    '\n' +
    "<p>Edit: The Ruby Programming Language, from O'Reilly, is the one with a tiny bit more details:</p>\n" +
    '\n' +
    '<blockquote>\n' +
    '  <p>6.5.3 The Arity of a Proc</p>\n' +
    '  \n' +
    '  <p>The arity of a proc or lambda is the number of arguments it expects.\n' +
    '  (The word is derived from the “ary” suffix of unary, binary, ternary,\n' +
    '  etc.) Proc objects have an arity method that returns the number of\n' +
    '  arguments they expect. For example:</p>\n' +
    '\n' +
    '<pre><code>lambda{||}.arity # =&gt; 0. No arguments expected\n' +
    'lambda{|x| x}.arity # =&gt; 1. One argument expected\n' +
    'lambda{|x,y| x+y}.arity # =&gt; 2. Two arguments expected\n' +
    '</code></pre>\n' +
    '  \n' +
    '  <p>The notion of arity gets confusing when a Proc accepts an arbitrary\n' +
    '  number of argu- ments in an *-prefixed final argument. When a Proc\n' +
    '  allows optional arguments, the arity method returns a negative number\n' +
    '  of the form -n-1. A return value of this form indicates that the Proc\n' +
    '  requires n arguments, but it may optionally take additional arguments\n' +
    '  as well. -n-1 is known as the one’s-complement of n, and you can\n' +
    '  invert it with the ~ operator. So if arity returns a negative number\n' +
    '  m, then ~m (or -m-1) gives you the number of required arguments:</p>\n' +
    '\n' +
    '<pre><code>lambda {|*args|}.arity # =&gt; -1. ~-1 = -(-1)-1 = 0 arguments required\n' +
    'lambda {|first, *rest|}.arity # =&gt; -2. ~-2 = -(-2)-1 = 1 argument required\n' +
    '</code></pre>\n' +
    '  \n' +
    '  <p>There is one final wrinkle to the arity method. In Ruby 1.8, a Proc\n' +
    '  declared without any argument clause at all (that is, without any ||\n' +
    '  characters) may be invoked with any number of arguments (and these\n' +
    '  arguments are ignored). The arity method returns –1 to indicate that\n' +
    '  there are no required arguments. This has changed in Ruby 1.9: a Proc\n' +
    '  declared like this has an arity of 0. If it is a lambda, then it is an\n' +
    '  error to invoke it with any arguments:</p>\n' +
    '\n' +
    '<pre><code>puts lambda {}.arity # –1 in Ruby 1.8; 0 in Ruby 1.9\n' +
    '</code></pre>\n' +
    '</blockquote>\n' +
    '\n' +
    '<p>Edit 2: Stefan adds the precise reason they differ in a comment:</p>\n' +
    '\n' +
    '<p><a href="http://www.ruby-doc.org/core-2.0/Proc.html#method-i-call">http://www.ruby-doc.org/core-2.0/Proc.html#method-i-call</a></p>\n' +
    '\n' +
    '<blockquote>\n' +
    '  <p>For <code>procs</code> created using <code>lambda</code> or <code>-&gt;()</code> an error is generated if the wrong number of parameters are passed to a <code>Proc</code> with multiple parameters. For <code>procs</code> created using <code>Proc.new</code> or <code>Kernel.proc</code>, extra parameters are silently discarded.</p>\n' +
    '</blockquote>\n' +
    '    '
]
[
  '\n' +
    '                \n' +
    '<p>I have a superclass and I want to use a variable that is inside this superclass into my subclass. How can this be possible?</p>\n' +
    '    ',
  '\n' +
    '<p>Just make the <em>field</em> <code>protected</code>, meaning that it should be visible to all derived classes.</p>\n' +
    '    '
]
